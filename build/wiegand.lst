ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"wiegand.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.getCode,"ax",%progbits
  16              		.align	1
  17              		.global	getCode
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	getCode:
  25              	.LFB72:
  26              		.file 1 "Core/Src/wiegand.c"
   1:Core/Src/wiegand.c **** /*
   2:Core/Src/wiegand.c ****  * wiegand.c
   3:Core/Src/wiegand.c ****  *
   4:Core/Src/wiegand.c ****  *  Created on: 18 февр. 2020 г.
   5:Core/Src/wiegand.c ****  *      Author: dima
   6:Core/Src/wiegand.c ****  */
   7:Core/Src/wiegand.c **** 
   8:Core/Src/wiegand.c **** #include "wiegand.h"
   9:Core/Src/wiegand.c **** 
  10:Core/Src/wiegand.c **** volatile uint32_t cardTempHigh = 0;
  11:Core/Src/wiegand.c **** volatile uint32_t cardTemp = 0;
  12:Core/Src/wiegand.c **** volatile uint32_t lastWiegand = 0;
  13:Core/Src/wiegand.c **** uint32_t code = 0;
  14:Core/Src/wiegand.c **** volatile int16_t bitCount = 0;
  15:Core/Src/wiegand.c **** int16_t wiegandType = 0;
  16:Core/Src/wiegand.c **** 
  17:Core/Src/wiegand.c **** 
  18:Core/Src/wiegand.c **** 
  19:Core/Src/wiegand.c **** uint32_t getCode()
  20:Core/Src/wiegand.c **** {
  27              		.loc 1 20 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  21:Core/Src/wiegand.c **** 	return code;
  32              		.loc 1 21 2 view .LVU1
  22:Core/Src/wiegand.c **** }
  33              		.loc 1 22 1 is_stmt 0 view .LVU2
  34 0000 014B     		ldr	r3, .L2
  35 0002 1868     		ldr	r0, [r3]
  36 0004 7047     		bx	lr
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 2


  37              	.L3:
  38 0006 00BF     		.align	2
  39              	.L2:
  40 0008 00000000 		.word	.LANCHOR0
  41              		.cfi_endproc
  42              	.LFE72:
  44              		.section	.text.getWiegandType,"ax",%progbits
  45              		.align	1
  46              		.global	getWiegandType
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu softvfp
  52              	getWiegandType:
  53              	.LFB73:
  23:Core/Src/wiegand.c **** 
  24:Core/Src/wiegand.c **** int16_t getWiegandType()
  25:Core/Src/wiegand.c **** {
  54              		.loc 1 25 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  26:Core/Src/wiegand.c **** 	return wiegandType;
  59              		.loc 1 26 2 view .LVU4
  27:Core/Src/wiegand.c **** }
  60              		.loc 1 27 1 is_stmt 0 view .LVU5
  61 0000 014B     		ldr	r3, .L5
  62 0002 B3F90000 		ldrsh	r0, [r3]
  63 0006 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 0008 00000000 		.word	.LANCHOR1
  68              		.cfi_endproc
  69              	.LFE73:
  71              		.section	.text.ReadD0,"ax",%progbits
  72              		.align	1
  73              		.global	ReadD0
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu softvfp
  79              	ReadD0:
  80              	.LFB74:
  28:Core/Src/wiegand.c **** /*
  29:Core/Src/wiegand.c **** uint8_t wig_available()
  30:Core/Src/wiegand.c **** {
  31:Core/Src/wiegand.c **** 	uint8_t ret;
  32:Core/Src/wiegand.c **** 	//HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);   // отключаем прерывания WIG
  33:Core/Src/wiegand.c **** 
  34:Core/Src/wiegand.c **** 	ret = DoWiegandConversion();
  35:Core/Src/wiegand.c **** 
  36:Core/Src/wiegand.c **** 	//__HAL_GPIO_EXTI_CLEAR_IT(D0);    // очищаем бит EXTI_PR
  37:Core/Src/wiegand.c **** 	//__HAL_GPIO_EXTI_CLEAR_IT(D0_Pin);    // очищаем бит EXTI_PR
  38:Core/Src/wiegand.c **** 	//NVIC_ClearPendingIRQ(EXTI15_10_IRQn);  // очищаем бит NVIC_ICPRx
  39:Core/Src/wiegand.c **** 	//HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);    // включаем прерывания WIG
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 3


  40:Core/Src/wiegand.c **** 
  41:Core/Src/wiegand.c **** 	return ret;
  42:Core/Src/wiegand.c **** }
  43:Core/Src/wiegand.c **** */
  44:Core/Src/wiegand.c **** 
  45:Core/Src/wiegand.c **** void ReadD0()
  46:Core/Src/wiegand.c **** {
  81              		.loc 1 46 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 08B5     		push	{r3, lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
  47:Core/Src/wiegand.c **** 	bitCount++;				// Increament bit count for Interrupt connected to D0
  90              		.loc 1 47 2 view .LVU7
  91              		.loc 1 47 10 is_stmt 0 view .LVU8
  92 0002 104A     		ldr	r2, .L11
  93 0004 1388     		ldrh	r3, [r2]
  94 0006 0133     		adds	r3, r3, #1
  95 0008 1BB2     		sxth	r3, r3
  96 000a 1380     		strh	r3, [r2]	@ movhi
  48:Core/Src/wiegand.c **** 
  49:Core/Src/wiegand.c **** 	if (bitCount > 31)			// If bit count more than 31, process high bits
  97              		.loc 1 49 2 is_stmt 1 view .LVU9
  98              		.loc 1 49 15 is_stmt 0 view .LVU10
  99 000c 1388     		ldrh	r3, [r2]
 100 000e 1BB2     		sxth	r3, r3
 101              		.loc 1 49 5 view .LVU11
 102 0010 1F2B     		cmp	r3, #31
 103 0012 11DD     		ble	.L8
  50:Core/Src/wiegand.c **** 	{
  51:Core/Src/wiegand.c **** 		cardTempHigh |= ((0x80000000 & cardTemp) >> 31);	//	shift value to high bits
 104              		.loc 1 51 3 is_stmt 1 view .LVU12
 105              		.loc 1 51 44 is_stmt 0 view .LVU13
 106 0014 0C4A     		ldr	r2, .L11+4
 107 0016 1068     		ldr	r0, [r2]
 108              		.loc 1 51 16 view .LVU14
 109 0018 0C4B     		ldr	r3, .L11+8
 110 001a 1968     		ldr	r1, [r3]
 111 001c 41EAD071 		orr	r1, r1, r0, lsr #31
 112 0020 1960     		str	r1, [r3]
  52:Core/Src/wiegand.c **** 		cardTempHigh <<= 1;
 113              		.loc 1 52 3 is_stmt 1 view .LVU15
 114              		.loc 1 52 16 is_stmt 0 view .LVU16
 115 0022 1968     		ldr	r1, [r3]
 116 0024 4900     		lsls	r1, r1, #1
 117 0026 1960     		str	r1, [r3]
  53:Core/Src/wiegand.c **** 		cardTemp <<= 1;
 118              		.loc 1 53 3 is_stmt 1 view .LVU17
 119              		.loc 1 53 12 is_stmt 0 view .LVU18
 120 0028 1368     		ldr	r3, [r2]
 121 002a 5B00     		lsls	r3, r3, #1
 122 002c 1360     		str	r3, [r2]
 123              	.L9:
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 4


  54:Core/Src/wiegand.c **** 	}
  55:Core/Src/wiegand.c **** 	else
  56:Core/Src/wiegand.c **** 	{
  57:Core/Src/wiegand.c **** 		cardTemp <<= 1;		// D0 represent binary 0, so just left shift card data
  58:Core/Src/wiegand.c **** 	}
  59:Core/Src/wiegand.c **** 
  60:Core/Src/wiegand.c **** 	lastWiegand = HAL_GetTick();	// Keep track of last wiegand bit received
 124              		.loc 1 60 2 is_stmt 1 view .LVU19
 125              		.loc 1 60 16 is_stmt 0 view .LVU20
 126 002e FFF7FEFF 		bl	HAL_GetTick
 127              	.LVL0:
 128              		.loc 1 60 14 view .LVU21
 129 0032 074B     		ldr	r3, .L11+12
 130 0034 1860     		str	r0, [r3]
  61:Core/Src/wiegand.c **** }
 131              		.loc 1 61 1 view .LVU22
 132 0036 08BD     		pop	{r3, pc}
 133              	.L8:
  57:Core/Src/wiegand.c **** 	}
 134              		.loc 1 57 3 is_stmt 1 view .LVU23
  57:Core/Src/wiegand.c **** 	}
 135              		.loc 1 57 12 is_stmt 0 view .LVU24
 136 0038 034A     		ldr	r2, .L11+4
 137 003a 1368     		ldr	r3, [r2]
 138 003c 5B00     		lsls	r3, r3, #1
 139 003e 1360     		str	r3, [r2]
 140 0040 F5E7     		b	.L9
 141              	.L12:
 142 0042 00BF     		.align	2
 143              	.L11:
 144 0044 00000000 		.word	.LANCHOR2
 145 0048 00000000 		.word	.LANCHOR3
 146 004c 00000000 		.word	.LANCHOR4
 147 0050 00000000 		.word	.LANCHOR5
 148              		.cfi_endproc
 149              	.LFE74:
 151              		.section	.text.ReadD1,"ax",%progbits
 152              		.align	1
 153              		.global	ReadD1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	ReadD1:
 160              	.LFB75:
  62:Core/Src/wiegand.c **** 
  63:Core/Src/wiegand.c **** void ReadD1()
  64:Core/Src/wiegand.c **** {
 161              		.loc 1 64 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 5


  65:Core/Src/wiegand.c **** 	bitCount++;				// Increment bit count for Interrupt connected to D1
 170              		.loc 1 65 2 view .LVU26
 171              		.loc 1 65 10 is_stmt 0 view .LVU27
 172 0002 144A     		ldr	r2, .L17
 173 0004 1388     		ldrh	r3, [r2]
 174 0006 0133     		adds	r3, r3, #1
 175 0008 1BB2     		sxth	r3, r3
 176 000a 1380     		strh	r3, [r2]	@ movhi
  66:Core/Src/wiegand.c **** 
  67:Core/Src/wiegand.c **** 	if(bitCount > 31)			// If bit count more than 31, process high bits
 177              		.loc 1 67 2 is_stmt 1 view .LVU28
 178              		.loc 1 67 14 is_stmt 0 view .LVU29
 179 000c 1388     		ldrh	r3, [r2]
 180 000e 1BB2     		sxth	r3, r3
 181              		.loc 1 67 4 view .LVU30
 182 0010 1F2B     		cmp	r3, #31
 183 0012 15DD     		ble	.L14
  68:Core/Src/wiegand.c **** 	{
  69:Core/Src/wiegand.c **** 		cardTempHigh |= ((0x80000000 & cardTemp) >> 31);	// shift value to high bits
 184              		.loc 1 69 3 is_stmt 1 view .LVU31
 185              		.loc 1 69 44 is_stmt 0 view .LVU32
 186 0014 104B     		ldr	r3, .L17+4
 187 0016 1868     		ldr	r0, [r3]
 188              		.loc 1 69 16 view .LVU33
 189 0018 104A     		ldr	r2, .L17+8
 190 001a 1168     		ldr	r1, [r2]
 191 001c 41EAD071 		orr	r1, r1, r0, lsr #31
 192 0020 1160     		str	r1, [r2]
  70:Core/Src/wiegand.c **** 		cardTempHigh <<= 1;
 193              		.loc 1 70 3 is_stmt 1 view .LVU34
 194              		.loc 1 70 16 is_stmt 0 view .LVU35
 195 0022 1168     		ldr	r1, [r2]
 196 0024 4900     		lsls	r1, r1, #1
 197 0026 1160     		str	r1, [r2]
  71:Core/Src/wiegand.c **** 		cardTemp |= 1;
 198              		.loc 1 71 3 is_stmt 1 view .LVU36
 199              		.loc 1 71 12 is_stmt 0 view .LVU37
 200 0028 1A68     		ldr	r2, [r3]
 201 002a 42F00102 		orr	r2, r2, #1
 202 002e 1A60     		str	r2, [r3]
  72:Core/Src/wiegand.c **** 		cardTemp <<= 1;
 203              		.loc 1 72 3 is_stmt 1 view .LVU38
 204              		.loc 1 72 12 is_stmt 0 view .LVU39
 205 0030 1A68     		ldr	r2, [r3]
 206 0032 5200     		lsls	r2, r2, #1
 207 0034 1A60     		str	r2, [r3]
 208              	.L15:
  73:Core/Src/wiegand.c **** 	}
  74:Core/Src/wiegand.c **** 	else
  75:Core/Src/wiegand.c **** 	{
  76:Core/Src/wiegand.c **** 		cardTemp |= 1;			// D1 represent binary 1, so OR card data with 1 then
  77:Core/Src/wiegand.c **** 		cardTemp <<= 1;		// left shift card data
  78:Core/Src/wiegand.c **** 	}
  79:Core/Src/wiegand.c **** 
  80:Core/Src/wiegand.c **** 	lastWiegand = HAL_GetTick();	// Keep track of last wiegand bit received
 209              		.loc 1 80 2 is_stmt 1 view .LVU40
 210              		.loc 1 80 16 is_stmt 0 view .LVU41
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 6


 211 0036 FFF7FEFF 		bl	HAL_GetTick
 212              	.LVL1:
 213              		.loc 1 80 14 view .LVU42
 214 003a 094B     		ldr	r3, .L17+12
 215 003c 1860     		str	r0, [r3]
  81:Core/Src/wiegand.c **** }
 216              		.loc 1 81 1 view .LVU43
 217 003e 08BD     		pop	{r3, pc}
 218              	.L14:
  76:Core/Src/wiegand.c **** 		cardTemp <<= 1;		// left shift card data
 219              		.loc 1 76 3 is_stmt 1 view .LVU44
  76:Core/Src/wiegand.c **** 		cardTemp <<= 1;		// left shift card data
 220              		.loc 1 76 12 is_stmt 0 view .LVU45
 221 0040 054B     		ldr	r3, .L17+4
 222 0042 1A68     		ldr	r2, [r3]
 223 0044 42F00102 		orr	r2, r2, #1
 224 0048 1A60     		str	r2, [r3]
  77:Core/Src/wiegand.c **** 	}
 225              		.loc 1 77 3 is_stmt 1 view .LVU46
  77:Core/Src/wiegand.c **** 	}
 226              		.loc 1 77 12 is_stmt 0 view .LVU47
 227 004a 1A68     		ldr	r2, [r3]
 228 004c 5200     		lsls	r2, r2, #1
 229 004e 1A60     		str	r2, [r3]
 230 0050 F1E7     		b	.L15
 231              	.L18:
 232 0052 00BF     		.align	2
 233              	.L17:
 234 0054 00000000 		.word	.LANCHOR2
 235 0058 00000000 		.word	.LANCHOR3
 236 005c 00000000 		.word	.LANCHOR4
 237 0060 00000000 		.word	.LANCHOR5
 238              		.cfi_endproc
 239              	.LFE75:
 241              		.section	.text.GetCardId,"ax",%progbits
 242              		.align	1
 243              		.global	GetCardId
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu softvfp
 249              	GetCardId:
 250              	.LVL2:
 251              	.LFB76:
  82:Core/Src/wiegand.c **** 
  83:Core/Src/wiegand.c **** uint32_t GetCardId(volatile uint32_t *codehigh, volatile uint32_t *codelow, uint8_t bitlength)
  84:Core/Src/wiegand.c **** {
 252              		.loc 1 84 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
  85:Core/Src/wiegand.c **** 
  86:Core/Src/wiegand.c **** 	if(bitlength == 26)								// EM tag
 257              		.loc 1 86 2 view .LVU49
 258              		.loc 1 86 4 is_stmt 0 view .LVU50
 259 0000 1A2A     		cmp	r2, #26
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 7


 260 0002 03D0     		beq	.L23
  87:Core/Src/wiegand.c **** 	{
  88:Core/Src/wiegand.c **** 		return (*codelow & 0x1FFFFFE) >> 1;
  89:Core/Src/wiegand.c **** 	}
  90:Core/Src/wiegand.c **** 
  91:Core/Src/wiegand.c **** 	if(bitlength == 34)								// Mifare
 261              		.loc 1 91 2 is_stmt 1 view .LVU51
 262              		.loc 1 91 4 is_stmt 0 view .LVU52
 263 0004 222A     		cmp	r2, #34
 264 0006 05D0     		beq	.L24
  92:Core/Src/wiegand.c **** 	{
  93:Core/Src/wiegand.c **** 		*codehigh = *codehigh & 0x03;				// only need the 2 LSB of the codehigh
  94:Core/Src/wiegand.c **** 		*codehigh <<= 30;							// shift 2 LSB to MSB
  95:Core/Src/wiegand.c **** 		*codelow >>= 1;
  96:Core/Src/wiegand.c **** 		return *codehigh | *codelow;
  97:Core/Src/wiegand.c **** 	}
  98:Core/Src/wiegand.c **** 
  99:Core/Src/wiegand.c **** 	return *codelow;								// EM tag or Mifare without parity bits
 265              		.loc 1 99 2 is_stmt 1 view .LVU53
 266              		.loc 1 99 9 is_stmt 0 view .LVU54
 267 0008 0868     		ldr	r0, [r1]
 268              	.LVL3:
 100:Core/Src/wiegand.c **** }
 269              		.loc 1 100 1 view .LVU55
 270 000a 7047     		bx	lr
 271              	.LVL4:
 272              	.L23:
  88:Core/Src/wiegand.c **** 	}
 273              		.loc 1 88 3 is_stmt 1 view .LVU56
  88:Core/Src/wiegand.c **** 	}
 274              		.loc 1 88 11 is_stmt 0 view .LVU57
 275 000c 0868     		ldr	r0, [r1]
 276              	.LVL5:
  88:Core/Src/wiegand.c **** 	}
 277              		.loc 1 88 33 view .LVU58
 278 000e C0F35700 		ubfx	r0, r0, #1, #24
 279 0012 7047     		bx	lr
 280              	.LVL6:
 281              	.L24:
  93:Core/Src/wiegand.c **** 		*codehigh <<= 30;							// shift 2 LSB to MSB
 282              		.loc 1 93 3 is_stmt 1 view .LVU59
  93:Core/Src/wiegand.c **** 		*codehigh <<= 30;							// shift 2 LSB to MSB
 283              		.loc 1 93 15 is_stmt 0 view .LVU60
 284 0014 0368     		ldr	r3, [r0]
  93:Core/Src/wiegand.c **** 		*codehigh <<= 30;							// shift 2 LSB to MSB
 285              		.loc 1 93 25 view .LVU61
 286 0016 03F00303 		and	r3, r3, #3
  93:Core/Src/wiegand.c **** 		*codehigh <<= 30;							// shift 2 LSB to MSB
 287              		.loc 1 93 13 view .LVU62
 288 001a 0360     		str	r3, [r0]
  94:Core/Src/wiegand.c **** 		*codelow >>= 1;
 289              		.loc 1 94 3 is_stmt 1 view .LVU63
  94:Core/Src/wiegand.c **** 		*codelow >>= 1;
 290              		.loc 1 94 13 is_stmt 0 view .LVU64
 291 001c 0368     		ldr	r3, [r0]
 292 001e 9B07     		lsls	r3, r3, #30
 293 0020 0360     		str	r3, [r0]
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 8


  95:Core/Src/wiegand.c **** 		return *codehigh | *codelow;
 294              		.loc 1 95 3 is_stmt 1 view .LVU65
  95:Core/Src/wiegand.c **** 		return *codehigh | *codelow;
 295              		.loc 1 95 12 is_stmt 0 view .LVU66
 296 0022 0B68     		ldr	r3, [r1]
 297 0024 5B08     		lsrs	r3, r3, #1
 298 0026 0B60     		str	r3, [r1]
  96:Core/Src/wiegand.c **** 	}
 299              		.loc 1 96 3 is_stmt 1 view .LVU67
  96:Core/Src/wiegand.c **** 	}
 300              		.loc 1 96 10 is_stmt 0 view .LVU68
 301 0028 0068     		ldr	r0, [r0]
 302              	.LVL7:
  96:Core/Src/wiegand.c **** 	}
 303              		.loc 1 96 22 view .LVU69
 304 002a 0B68     		ldr	r3, [r1]
  96:Core/Src/wiegand.c **** 	}
 305              		.loc 1 96 20 view .LVU70
 306 002c 1843     		orrs	r0, r0, r3
 307 002e 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE76:
 311              		.section	.text.translateEnterEscapeKeyPress,"ax",%progbits
 312              		.align	1
 313              		.global	translateEnterEscapeKeyPress
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	translateEnterEscapeKeyPress:
 320              	.LVL8:
 321              	.LFB77:
 101:Core/Src/wiegand.c **** 
 102:Core/Src/wiegand.c **** uint8_t translateEnterEscapeKeyPress(uint8_t originalKeyPress)
 103:Core/Src/wiegand.c **** {
 322              		.loc 1 103 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 104:Core/Src/wiegand.c **** 	switch(originalKeyPress)
 327              		.loc 1 104 2 view .LVU72
 328 0000 0A28     		cmp	r0, #10
 329 0002 02D0     		beq	.L27
 330 0004 0B28     		cmp	r0, #11
 331 0006 02D0     		beq	.L28
 332 0008 7047     		bx	lr
 333              	.L27:
 105:Core/Src/wiegand.c **** 	{
 106:Core/Src/wiegand.c **** 		case 0x0b:        // 11 or * key
 107:Core/Src/wiegand.c **** 			return 0x0d;  // 13 or ASCII ENTER
 108:Core/Src/wiegand.c **** 
 109:Core/Src/wiegand.c **** 		case 0x0a:        // 10 or # key
 110:Core/Src/wiegand.c **** 			return 0x1b;  // 27 or ASCII ESCAPE
 334              		.loc 1 110 11 is_stmt 0 view .LVU73
 335 000a 1B20     		movs	r0, #27
 336              	.LVL9:
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 9


 337              		.loc 1 110 11 view .LVU74
 338 000c 7047     		bx	lr
 339              	.LVL10:
 340              	.L28:
 107:Core/Src/wiegand.c **** 
 341              		.loc 1 107 11 view .LVU75
 342 000e 0D20     		movs	r0, #13
 343              	.LVL11:
 111:Core/Src/wiegand.c **** 
 112:Core/Src/wiegand.c **** 		default:
 113:Core/Src/wiegand.c **** 			return originalKeyPress;
 114:Core/Src/wiegand.c **** 	}
 115:Core/Src/wiegand.c **** }
 344              		.loc 1 115 1 view .LVU76
 345 0010 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE77:
 349              		.section	.text.wig_available,"ax",%progbits
 350              		.align	1
 351              		.global	wig_available
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	wig_available:
 358              	.LFB78:
 116:Core/Src/wiegand.c **** 
 117:Core/Src/wiegand.c **** uint8_t wig_available()
 118:Core/Src/wiegand.c **** {
 359              		.loc 1 118 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 70B5     		push	{r4, r5, r6, lr}
 364              	.LCFI2:
 365              		.cfi_def_cfa_offset 16
 366              		.cfi_offset 4, -16
 367              		.cfi_offset 5, -12
 368              		.cfi_offset 6, -8
 369              		.cfi_offset 14, -4
 119:Core/Src/wiegand.c **** 	uint32_t cardID;
 370              		.loc 1 119 2 view .LVU78
 120:Core/Src/wiegand.c **** 	uint32_t time_wig = HAL_GetTick();
 371              		.loc 1 120 2 view .LVU79
 372              		.loc 1 120 22 is_stmt 0 view .LVU80
 373 0002 FFF7FEFF 		bl	HAL_GetTick
 374              	.LVL12:
 121:Core/Src/wiegand.c **** 
 122:Core/Src/wiegand.c **** 	if((time_wig - lastWiegand) > 25) // if no more signal coming through after 25ms
 375              		.loc 1 122 2 is_stmt 1 view .LVU81
 376              		.loc 1 122 15 is_stmt 0 view .LVU82
 377 0006 4A4B     		ldr	r3, .L41
 378 0008 1B68     		ldr	r3, [r3]
 379 000a C31A     		subs	r3, r0, r3
 380              		.loc 1 122 4 view .LVU83
 381 000c 192B     		cmp	r3, #25
 382 000e 40F28C80 		bls	.L37
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 10


 123:Core/Src/wiegand.c **** 	{
 124:Core/Src/wiegand.c **** 		if((bitCount == 24) || (bitCount == 26) || (bitCount == 32) || (bitCount == 34) || (bitCount == 8
 383              		.loc 1 124 3 is_stmt 1 view .LVU84
 384              		.loc 1 124 16 is_stmt 0 view .LVU85
 385 0012 484B     		ldr	r3, .L41+4
 386 0014 1B88     		ldrh	r3, [r3]
 387 0016 1BB2     		sxth	r3, r3
 388              		.loc 1 124 5 view .LVU86
 389 0018 182B     		cmp	r3, #24
 390 001a 18D0     		beq	.L31
 391              		.loc 1 124 36 discriminator 1 view .LVU87
 392 001c 454B     		ldr	r3, .L41+4
 393 001e 1B88     		ldrh	r3, [r3]
 394 0020 1BB2     		sxth	r3, r3
 395              		.loc 1 124 23 discriminator 1 view .LVU88
 396 0022 1A2B     		cmp	r3, #26
 397 0024 13D0     		beq	.L31
 398              		.loc 1 124 56 discriminator 2 view .LVU89
 399 0026 434B     		ldr	r3, .L41+4
 400 0028 1B88     		ldrh	r3, [r3]
 401 002a 1BB2     		sxth	r3, r3
 402              		.loc 1 124 43 discriminator 2 view .LVU90
 403 002c 202B     		cmp	r3, #32
 404 002e 0ED0     		beq	.L31
 405              		.loc 1 124 76 discriminator 3 view .LVU91
 406 0030 404B     		ldr	r3, .L41+4
 407 0032 1B88     		ldrh	r3, [r3]
 408 0034 1BB2     		sxth	r3, r3
 409              		.loc 1 124 63 discriminator 3 view .LVU92
 410 0036 222B     		cmp	r3, #34
 411 0038 09D0     		beq	.L31
 412              		.loc 1 124 96 discriminator 4 view .LVU93
 413 003a 3E4B     		ldr	r3, .L41+4
 414 003c 1B88     		ldrh	r3, [r3]
 415 003e 1BB2     		sxth	r3, r3
 416              		.loc 1 124 83 discriminator 4 view .LVU94
 417 0040 082B     		cmp	r3, #8
 418 0042 04D0     		beq	.L31
 419              		.loc 1 124 115 discriminator 5 view .LVU95
 420 0044 3B4B     		ldr	r3, .L41+4
 421 0046 1B88     		ldrh	r3, [r3]
 422 0048 1BB2     		sxth	r3, r3
 423              		.loc 1 124 102 discriminator 5 view .LVU96
 424 004a 042B     		cmp	r3, #4
 425 004c 63D1     		bne	.L32
 426              	.L31:
 125:Core/Src/wiegand.c **** 		{
 126:Core/Src/wiegand.c **** 			cardTemp >>= 1; // shift right 1 bit to get back the real value - interrupt done 1 left shift in
 427              		.loc 1 126 4 is_stmt 1 view .LVU97
 428              		.loc 1 126 13 is_stmt 0 view .LVU98
 429 004e 3A4A     		ldr	r2, .L41+8
 430 0050 1368     		ldr	r3, [r2]
 431 0052 5B08     		lsrs	r3, r3, #1
 432 0054 1360     		str	r3, [r2]
 127:Core/Src/wiegand.c **** 
 128:Core/Src/wiegand.c **** 			if(bitCount > 32) // bit count more than 32 bits, shift high bits right to make adjustment
 433              		.loc 1 128 4 is_stmt 1 view .LVU99
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 11


 434              		.loc 1 128 16 is_stmt 0 view .LVU100
 435 0056 374B     		ldr	r3, .L41+4
 436 0058 1B88     		ldrh	r3, [r3]
 437 005a 1BB2     		sxth	r3, r3
 438              		.loc 1 128 6 view .LVU101
 439 005c 202B     		cmp	r3, #32
 440 005e 03DD     		ble	.L33
 129:Core/Src/wiegand.c **** 			{
 130:Core/Src/wiegand.c **** 				cardTempHigh >>= 1;
 441              		.loc 1 130 5 is_stmt 1 view .LVU102
 442              		.loc 1 130 18 is_stmt 0 view .LVU103
 443 0060 364A     		ldr	r2, .L41+12
 444 0062 1368     		ldr	r3, [r2]
 445 0064 5B08     		lsrs	r3, r3, #1
 446 0066 1360     		str	r3, [r2]
 447              	.L33:
 131:Core/Src/wiegand.c **** 			}
 132:Core/Src/wiegand.c **** 
 133:Core/Src/wiegand.c **** 			if(bitCount == 8)		// keypress wiegand with integrity
 448              		.loc 1 133 4 is_stmt 1 view .LVU104
 449              		.loc 1 133 16 is_stmt 0 view .LVU105
 450 0068 324B     		ldr	r3, .L41+4
 451 006a 1B88     		ldrh	r3, [r3]
 452 006c 1BB2     		sxth	r3, r3
 453              		.loc 1 133 6 view .LVU106
 454 006e 082B     		cmp	r3, #8
 455 0070 17D0     		beq	.L39
 134:Core/Src/wiegand.c **** 			{
 135:Core/Src/wiegand.c **** 				// 8-bit Wiegand keyboard data, high nibble is the "NOT" of low nibble
 136:Core/Src/wiegand.c **** 				// eg if key 1 pressed, data=E1 in binary 11100001 , high nibble=1110 , low nibble = 0001
 137:Core/Src/wiegand.c **** 				uint8_t highNibble = (cardTemp & 0xf0) >> 4;
 138:Core/Src/wiegand.c **** 				uint8_t lowNibble = (cardTemp & 0x0f);
 139:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 140:Core/Src/wiegand.c **** 				bitCount = 0;
 141:Core/Src/wiegand.c **** 				cardTemp = 0;
 142:Core/Src/wiegand.c **** 				cardTempHigh = 0;
 143:Core/Src/wiegand.c **** 
 144:Core/Src/wiegand.c **** 				if(lowNibble == (~highNibble & 0x0f))		// check if low nibble matches the "NOT" of high nibble.
 145:Core/Src/wiegand.c **** 				{
 146:Core/Src/wiegand.c **** 					code = (int16_t)translateEnterEscapeKeyPress(lowNibble);
 147:Core/Src/wiegand.c **** 					return 1;
 148:Core/Src/wiegand.c **** 				}
 149:Core/Src/wiegand.c **** 				else
 150:Core/Src/wiegand.c **** 				{
 151:Core/Src/wiegand.c **** 					lastWiegand = time_wig;
 152:Core/Src/wiegand.c **** 					bitCount = 0;
 153:Core/Src/wiegand.c **** 					cardTemp = 0;
 154:Core/Src/wiegand.c **** 					cardTempHigh = 0;
 155:Core/Src/wiegand.c **** 					return 0;
 156:Core/Src/wiegand.c **** 				}
 157:Core/Src/wiegand.c **** 
 158:Core/Src/wiegand.c **** 				// TODO: Handle validation failure case!
 159:Core/Src/wiegand.c **** 			}
 160:Core/Src/wiegand.c **** 			else if(4 == bitCount)
 456              		.loc 1 160 9 is_stmt 1 view .LVU107
 457              		.loc 1 160 14 is_stmt 0 view .LVU108
 458 0072 304B     		ldr	r3, .L41+4
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 12


 459 0074 1B88     		ldrh	r3, [r3]
 460 0076 1BB2     		sxth	r3, r3
 461              		.loc 1 160 11 view .LVU109
 462 0078 042B     		cmp	r3, #4
 463 007a 38D1     		bne	.L36
 161:Core/Src/wiegand.c **** 			{
 162:Core/Src/wiegand.c **** 				// 4-bit Wiegand codes have no data integrity check so we just
 163:Core/Src/wiegand.c **** 				// read the LOW nibble.
 164:Core/Src/wiegand.c **** 				code = (int16_t)translateEnterEscapeKeyPress(cardTemp & 0x0000000F);
 464              		.loc 1 164 5 is_stmt 1 view .LVU110
 465              		.loc 1 164 21 is_stmt 0 view .LVU111
 466 007c 2E4C     		ldr	r4, .L41+8
 467 007e 2068     		ldr	r0, [r4]
 468              	.LVL13:
 469              		.loc 1 164 21 view .LVU112
 470 0080 00F00F00 		and	r0, r0, #15
 471 0084 FFF7FEFF 		bl	translateEnterEscapeKeyPress
 472              	.LVL14:
 473              		.loc 1 164 10 view .LVU113
 474 0088 2D4B     		ldr	r3, .L41+16
 475 008a 1860     		str	r0, [r3]
 165:Core/Src/wiegand.c **** 
 166:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 476              		.loc 1 166 5 is_stmt 1 view .LVU114
 477              		.loc 1 166 17 is_stmt 0 view .LVU115
 478 008c 294A     		ldr	r2, .L41+4
 479 008e 1188     		ldrh	r1, [r2]
 480 0090 2C4B     		ldr	r3, .L41+20
 481 0092 1980     		strh	r1, [r3]	@ movhi
 167:Core/Src/wiegand.c **** 				bitCount = 0;
 482              		.loc 1 167 5 is_stmt 1 view .LVU116
 483              		.loc 1 167 14 is_stmt 0 view .LVU117
 484 0094 0023     		movs	r3, #0
 485 0096 1380     		strh	r3, [r2]	@ movhi
 168:Core/Src/wiegand.c **** 				cardTemp = 0;
 486              		.loc 1 168 5 is_stmt 1 view .LVU118
 487              		.loc 1 168 14 is_stmt 0 view .LVU119
 488 0098 2360     		str	r3, [r4]
 169:Core/Src/wiegand.c **** 				cardTempHigh = 0;
 489              		.loc 1 169 5 is_stmt 1 view .LVU120
 490              		.loc 1 169 18 is_stmt 0 view .LVU121
 491 009a 284A     		ldr	r2, .L41+12
 492 009c 1360     		str	r3, [r2]
 170:Core/Src/wiegand.c **** 
 171:Core/Src/wiegand.c **** 				return 1;
 493              		.loc 1 171 5 is_stmt 1 view .LVU122
 494              		.loc 1 171 12 is_stmt 0 view .LVU123
 495 009e 0120     		movs	r0, #1
 496 00a0 44E0     		b	.L30
 497              	.LVL15:
 498              	.L39:
 499              	.LBB2:
 137:Core/Src/wiegand.c **** 				uint8_t lowNibble = (cardTemp & 0x0f);
 500              		.loc 1 137 5 is_stmt 1 view .LVU124
 137:Core/Src/wiegand.c **** 				uint8_t lowNibble = (cardTemp & 0x0f);
 501              		.loc 1 137 44 is_stmt 0 view .LVU125
 502 00a2 254C     		ldr	r4, .L41+8
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 13


 503 00a4 2368     		ldr	r3, [r4]
 137:Core/Src/wiegand.c **** 				uint8_t lowNibble = (cardTemp & 0x0f);
 504              		.loc 1 137 13 view .LVU126
 505 00a6 C3F30313 		ubfx	r3, r3, #4, #4
 506              	.LVL16:
 138:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 507              		.loc 1 138 5 is_stmt 1 view .LVU127
 138:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 508              		.loc 1 138 35 is_stmt 0 view .LVU128
 509 00aa 2268     		ldr	r2, [r4]
 138:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 510              		.loc 1 138 13 view .LVU129
 511 00ac 02F00F02 		and	r2, r2, #15
 512              	.LVL17:
 139:Core/Src/wiegand.c **** 				bitCount = 0;
 513              		.loc 1 139 5 is_stmt 1 view .LVU130
 139:Core/Src/wiegand.c **** 				bitCount = 0;
 514              		.loc 1 139 17 is_stmt 0 view .LVU131
 515 00b0 204D     		ldr	r5, .L41+4
 516 00b2 2E88     		ldrh	r6, [r5]
 517 00b4 2349     		ldr	r1, .L41+20
 518 00b6 0E80     		strh	r6, [r1]	@ movhi
 140:Core/Src/wiegand.c **** 				cardTemp = 0;
 519              		.loc 1 140 5 is_stmt 1 view .LVU132
 140:Core/Src/wiegand.c **** 				cardTemp = 0;
 520              		.loc 1 140 14 is_stmt 0 view .LVU133
 521 00b8 0021     		movs	r1, #0
 522 00ba 2980     		strh	r1, [r5]	@ movhi
 141:Core/Src/wiegand.c **** 				cardTempHigh = 0;
 523              		.loc 1 141 5 is_stmt 1 view .LVU134
 141:Core/Src/wiegand.c **** 				cardTempHigh = 0;
 524              		.loc 1 141 14 is_stmt 0 view .LVU135
 525 00bc 2160     		str	r1, [r4]
 142:Core/Src/wiegand.c **** 
 526              		.loc 1 142 5 is_stmt 1 view .LVU136
 142:Core/Src/wiegand.c **** 
 527              		.loc 1 142 18 is_stmt 0 view .LVU137
 528 00be 1F4C     		ldr	r4, .L41+12
 529 00c0 2160     		str	r1, [r4]
 144:Core/Src/wiegand.c **** 				{
 530              		.loc 1 144 5 is_stmt 1 view .LVU138
 144:Core/Src/wiegand.c **** 				{
 531              		.loc 1 144 22 is_stmt 0 view .LVU139
 532 00c2 DB43     		mvns	r3, r3
 533              	.LVL18:
 144:Core/Src/wiegand.c **** 				{
 534              		.loc 1 144 34 view .LVU140
 535 00c4 03F00F03 		and	r3, r3, #15
 536              	.LVL19:
 144:Core/Src/wiegand.c **** 				{
 537              		.loc 1 144 7 view .LVU141
 538 00c8 9A42     		cmp	r2, r3
 539 00ca 09D0     		beq	.L40
 151:Core/Src/wiegand.c **** 					bitCount = 0;
 540              		.loc 1 151 6 is_stmt 1 view .LVU142
 151:Core/Src/wiegand.c **** 					bitCount = 0;
 541              		.loc 1 151 18 is_stmt 0 view .LVU143
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 14


 542 00cc 184B     		ldr	r3, .L41
 543 00ce 1860     		str	r0, [r3]
 152:Core/Src/wiegand.c **** 					cardTemp = 0;
 544              		.loc 1 152 6 is_stmt 1 view .LVU144
 152:Core/Src/wiegand.c **** 					cardTemp = 0;
 545              		.loc 1 152 15 is_stmt 0 view .LVU145
 546 00d0 0020     		movs	r0, #0
 547              	.LVL20:
 152:Core/Src/wiegand.c **** 					cardTemp = 0;
 548              		.loc 1 152 15 view .LVU146
 549 00d2 184B     		ldr	r3, .L41+4
 152:Core/Src/wiegand.c **** 					cardTemp = 0;
 550              		.loc 1 152 15 view .LVU147
 551 00d4 1880     		strh	r0, [r3]	@ movhi
 552              	.LVL21:
 153:Core/Src/wiegand.c **** 					cardTempHigh = 0;
 553              		.loc 1 153 6 is_stmt 1 view .LVU148
 153:Core/Src/wiegand.c **** 					cardTempHigh = 0;
 554              		.loc 1 153 15 is_stmt 0 view .LVU149
 555 00d6 184B     		ldr	r3, .L41+8
 556 00d8 1860     		str	r0, [r3]
 154:Core/Src/wiegand.c **** 					return 0;
 557              		.loc 1 154 6 is_stmt 1 view .LVU150
 154:Core/Src/wiegand.c **** 					return 0;
 558              		.loc 1 154 19 is_stmt 0 view .LVU151
 559 00da 184B     		ldr	r3, .L41+12
 560 00dc 1860     		str	r0, [r3]
 155:Core/Src/wiegand.c **** 				}
 561              		.loc 1 155 6 is_stmt 1 view .LVU152
 155:Core/Src/wiegand.c **** 				}
 562              		.loc 1 155 13 is_stmt 0 view .LVU153
 563 00de 25E0     		b	.L30
 564              	.LVL22:
 565              	.L40:
 146:Core/Src/wiegand.c **** 					return 1;
 566              		.loc 1 146 6 is_stmt 1 view .LVU154
 146:Core/Src/wiegand.c **** 					return 1;
 567              		.loc 1 146 22 is_stmt 0 view .LVU155
 568 00e0 1046     		mov	r0, r2
 569              	.LVL23:
 146:Core/Src/wiegand.c **** 					return 1;
 570              		.loc 1 146 22 view .LVU156
 571 00e2 FFF7FEFF 		bl	translateEnterEscapeKeyPress
 572              	.LVL24:
 146:Core/Src/wiegand.c **** 					return 1;
 573              		.loc 1 146 11 view .LVU157
 574 00e6 164B     		ldr	r3, .L41+16
 575 00e8 1860     		str	r0, [r3]
 147:Core/Src/wiegand.c **** 				}
 576              		.loc 1 147 6 is_stmt 1 view .LVU158
 147:Core/Src/wiegand.c **** 				}
 577              		.loc 1 147 13 is_stmt 0 view .LVU159
 578 00ea 0120     		movs	r0, #1
 579 00ec 1EE0     		b	.L30
 580              	.LVL25:
 581              	.L36:
 147:Core/Src/wiegand.c **** 				}
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 15


 582              		.loc 1 147 13 view .LVU160
 583              	.LBE2:
 172:Core/Src/wiegand.c **** 			}
 173:Core/Src/wiegand.c **** 			else		// wiegand 26 or wiegand 34
 174:Core/Src/wiegand.c **** 			{
 175:Core/Src/wiegand.c **** 				cardID = GetCardId(&cardTempHigh, &cardTemp, bitCount);
 584              		.loc 1 175 5 is_stmt 1 view .LVU161
 585              		.loc 1 175 14 is_stmt 0 view .LVU162
 586 00ee 114C     		ldr	r4, .L41+4
 587 00f0 2288     		ldrh	r2, [r4]
 588 00f2 114E     		ldr	r6, .L41+8
 589 00f4 114D     		ldr	r5, .L41+12
 590 00f6 D2B2     		uxtb	r2, r2
 591 00f8 3146     		mov	r1, r6
 592 00fa 2846     		mov	r0, r5
 593              	.LVL26:
 594              		.loc 1 175 14 view .LVU163
 595 00fc FFF7FEFF 		bl	GetCardId
 596              	.LVL27:
 176:Core/Src/wiegand.c **** 				wiegandType = bitCount;
 597              		.loc 1 176 5 is_stmt 1 view .LVU164
 598              		.loc 1 176 17 is_stmt 0 view .LVU165
 599 0100 2288     		ldrh	r2, [r4]
 600 0102 104B     		ldr	r3, .L41+20
 601 0104 1A80     		strh	r2, [r3]	@ movhi
 177:Core/Src/wiegand.c **** 				bitCount = 0;
 602              		.loc 1 177 5 is_stmt 1 view .LVU166
 603              		.loc 1 177 14 is_stmt 0 view .LVU167
 604 0106 0023     		movs	r3, #0
 605 0108 2380     		strh	r3, [r4]	@ movhi
 178:Core/Src/wiegand.c **** 				cardTemp = 0;
 606              		.loc 1 178 5 is_stmt 1 view .LVU168
 607              		.loc 1 178 14 is_stmt 0 view .LVU169
 608 010a 3360     		str	r3, [r6]
 179:Core/Src/wiegand.c **** 				cardTempHigh = 0;
 609              		.loc 1 179 5 is_stmt 1 view .LVU170
 610              		.loc 1 179 18 is_stmt 0 view .LVU171
 611 010c 2B60     		str	r3, [r5]
 180:Core/Src/wiegand.c **** 				code = cardID;
 612              		.loc 1 180 5 is_stmt 1 view .LVU172
 613              		.loc 1 180 10 is_stmt 0 view .LVU173
 614 010e 0C4B     		ldr	r3, .L41+16
 615 0110 1860     		str	r0, [r3]
 181:Core/Src/wiegand.c **** 				return 1;
 616              		.loc 1 181 5 is_stmt 1 view .LVU174
 617              		.loc 1 181 12 is_stmt 0 view .LVU175
 618 0112 0120     		movs	r0, #1
 619              	.LVL28:
 620              		.loc 1 181 12 view .LVU176
 621 0114 0AE0     		b	.L30
 622              	.LVL29:
 623              	.L32:
 182:Core/Src/wiegand.c **** 			}
 183:Core/Src/wiegand.c **** 		}
 184:Core/Src/wiegand.c **** 		else
 185:Core/Src/wiegand.c **** 		{
 186:Core/Src/wiegand.c **** 			// well time over 25 ms and bitCount !=8 , !=26, !=34 , must be noise or nothing then.
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 16


 187:Core/Src/wiegand.c **** 			lastWiegand = time_wig;
 624              		.loc 1 187 4 is_stmt 1 view .LVU177
 625              		.loc 1 187 16 is_stmt 0 view .LVU178
 626 0116 064B     		ldr	r3, .L41
 627 0118 1860     		str	r0, [r3]
 188:Core/Src/wiegand.c **** 			bitCount = 0;
 628              		.loc 1 188 4 is_stmt 1 view .LVU179
 629              		.loc 1 188 13 is_stmt 0 view .LVU180
 630 011a 0020     		movs	r0, #0
 631              	.LVL30:
 632              		.loc 1 188 13 view .LVU181
 633 011c 054B     		ldr	r3, .L41+4
 634              		.loc 1 188 13 view .LVU182
 635 011e 1880     		strh	r0, [r3]	@ movhi
 636              	.LVL31:
 189:Core/Src/wiegand.c **** 			cardTemp = 0;
 637              		.loc 1 189 4 is_stmt 1 view .LVU183
 638              		.loc 1 189 13 is_stmt 0 view .LVU184
 639 0120 054B     		ldr	r3, .L41+8
 640 0122 1860     		str	r0, [r3]
 190:Core/Src/wiegand.c **** 			cardTempHigh = 0;
 641              		.loc 1 190 4 is_stmt 1 view .LVU185
 642              		.loc 1 190 17 is_stmt 0 view .LVU186
 643 0124 054B     		ldr	r3, .L41+12
 644 0126 1860     		str	r0, [r3]
 191:Core/Src/wiegand.c **** 			return 0;
 645              		.loc 1 191 4 is_stmt 1 view .LVU187
 646              		.loc 1 191 11 is_stmt 0 view .LVU188
 647 0128 00E0     		b	.L30
 648              	.LVL32:
 649              	.L37:
 192:Core/Src/wiegand.c **** 		}
 193:Core/Src/wiegand.c **** 	}
 194:Core/Src/wiegand.c **** 	else
 195:Core/Src/wiegand.c **** 	{
 196:Core/Src/wiegand.c **** 		return 0;
 650              		.loc 1 196 10 view .LVU189
 651 012a 0020     		movs	r0, #0
 652              	.LVL33:
 653              	.L30:
 197:Core/Src/wiegand.c **** 	}
 198:Core/Src/wiegand.c **** }...
 654              		.loc 1 198 1 view .LVU190
 655 012c 70BD     		pop	{r4, r5, r6, pc}
 656              	.L42:
 657 012e 00BF     		.align	2
 658              	.L41:
 659 0130 00000000 		.word	.LANCHOR5
 660 0134 00000000 		.word	.LANCHOR2
 661 0138 00000000 		.word	.LANCHOR3
 662 013c 00000000 		.word	.LANCHOR4
 663 0140 00000000 		.word	.LANCHOR0
 664 0144 00000000 		.word	.LANCHOR1
 665              		.cfi_endproc
 666              	.LFE78:
 668              		.global	wiegandType
 669              		.global	bitCount
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 17


 670              		.global	code
 671              		.global	lastWiegand
 672              		.global	cardTemp
 673              		.global	cardTempHigh
 674              		.section	.bss.bitCount,"aw",%nobits
 675              		.align	1
 676              		.set	.LANCHOR2,. + 0
 679              	bitCount:
 680 0000 0000     		.space	2
 681              		.section	.bss.cardTemp,"aw",%nobits
 682              		.align	2
 683              		.set	.LANCHOR3,. + 0
 686              	cardTemp:
 687 0000 00000000 		.space	4
 688              		.section	.bss.cardTempHigh,"aw",%nobits
 689              		.align	2
 690              		.set	.LANCHOR4,. + 0
 693              	cardTempHigh:
 694 0000 00000000 		.space	4
 695              		.section	.bss.code,"aw",%nobits
 696              		.align	2
 697              		.set	.LANCHOR0,. + 0
 700              	code:
 701 0000 00000000 		.space	4
 702              		.section	.bss.lastWiegand,"aw",%nobits
 703              		.align	2
 704              		.set	.LANCHOR5,. + 0
 707              	lastWiegand:
 708 0000 00000000 		.space	4
 709              		.section	.bss.wiegandType,"aw",%nobits
 710              		.align	1
 711              		.set	.LANCHOR1,. + 0
 714              	wiegandType:
 715 0000 0000     		.space	2
 716              		.text
 717              	.Letext0:
 718              		.file 2 "c:\\users\\a.semcov\\frameworks\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types
 719              		.file 3 "c:\\users\\a.semcov\\frameworks\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h"
 720              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 721              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 722              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 wiegand.c
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:16     .text.getCode:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:24     .text.getCode:0000000000000000 getCode
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:40     .text.getCode:0000000000000008 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:45     .text.getWiegandType:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:52     .text.getWiegandType:0000000000000000 getWiegandType
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:67     .text.getWiegandType:0000000000000008 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:72     .text.ReadD0:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:79     .text.ReadD0:0000000000000000 ReadD0
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:144    .text.ReadD0:0000000000000044 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:152    .text.ReadD1:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:159    .text.ReadD1:0000000000000000 ReadD1
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:234    .text.ReadD1:0000000000000054 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:242    .text.GetCardId:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:249    .text.GetCardId:0000000000000000 GetCardId
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:312    .text.translateEnterEscapeKeyPress:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:319    .text.translateEnterEscapeKeyPress:0000000000000000 translateEnterEscapeKeyPress
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:350    .text.wig_available:0000000000000000 $t
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:357    .text.wig_available:0000000000000000 wig_available
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:659    .text.wig_available:0000000000000130 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:714    .bss.wiegandType:0000000000000000 wiegandType
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:679    .bss.bitCount:0000000000000000 bitCount
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:700    .bss.code:0000000000000000 code
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:707    .bss.lastWiegand:0000000000000000 lastWiegand
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:686    .bss.cardTemp:0000000000000000 cardTemp
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:693    .bss.cardTempHigh:0000000000000000 cardTempHigh
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:675    .bss.bitCount:0000000000000000 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:682    .bss.cardTemp:0000000000000000 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:689    .bss.cardTempHigh:0000000000000000 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:696    .bss.code:0000000000000000 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:703    .bss.lastWiegand:0000000000000000 $d
C:\Users\AD951~1.SEM\AppData\Local\Temp\cc9jujeL.s:710    .bss.wiegandType:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
