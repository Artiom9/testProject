ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB78:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "string.h"
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include "wiegand.h"
  28:Core/Src/main.c **** #include <stdarg.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** #ifndef __cplusplus
  43:Core/Src/main.c **** typedef unsigned char bool;
  44:Core/Src/main.c **** static const bool false = 0;
  45:Core/Src/main.c **** static const bool true = 1;
  46:Core/Src/main.c **** #endif
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** bool verifyCode(uint32_t code);
  55:Core/Src/main.c **** void UART_Printf(const char *fmt, ...);
  56:Core/Src/main.c **** bool verifyMode();
  57:Core/Src/main.c **** void verifyKey();
  58:Core/Src/main.c **** void switchedModes();
  59:Core/Src/main.c **** void switchMode();
  60:Core/Src/main.c **** void blink(int blinkTimes);
  61:Core/Src/main.c **** void read();
  62:Core/Src/main.c **** void openDoor();
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** volatile uint8_t wig_flag_inrt = 1;
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  71:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /*
  79:Core/Src/main.c ****     0 - normal
  80:Core/Src/main.c ****     1 - closed
  81:Core/Src/main.c ****     2 - open
  82:Core/Src/main.c ****     3 - conditionally open
  83:Core/Src/main.c ****     4 - temporarily open
  84:Core/Src/main.c ****     5 - alarm
  85:Core/Src/main.c ****   */
  86:Core/Src/main.c ****   int workMode = 0;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   // is door opened?
  89:Core/Src/main.c ****   bool isDoorOpened = false;
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 3


  91:Core/Src/main.c **** /* USER CODE END 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /**
  94:Core/Src/main.c ****   * @brief  The application entry point.
  95:Core/Src/main.c ****   * @retval int
  96:Core/Src/main.c ****   */
  97:Core/Src/main.c **** int main(void)
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   MX_USART1_UART_Init();
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c ****   
 124:Core/Src/main.c ****   uint32_t timme = 0;
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     if( (HAL_GetTick() - timme) > 15000 ){
 134:Core/Src/main.c ****       switchMode();
 135:Core/Src/main.c ****       timme = HAL_GetTick();
 136:Core/Src/main.c ****     }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****     if(wig_available())
 139:Core/Src/main.c ****     {
 140:Core/Src/main.c ****       if(workMode == 0)
 141:Core/Src/main.c ****       {
 142:Core/Src/main.c ****         wig_flag_inrt = 0;
 143:Core/Src/main.c ****         uint32_t wcode = getCode();
 144:Core/Src/main.c ****         wig_flag_inrt = 1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****         if(verifyCode(wcode)){
 147:Core/Src/main.c ****           char s[] = "Door was opened by a key. Key ID: ";
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 4


 148:Core/Src/main.c ****           char code[16];
 149:Core/Src/main.c ****           sprintf(code,"%lu", wcode);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****           strcat(s, code);
 152:Core/Src/main.c ****           strcat(s, ".\r\n");
 153:Core/Src/main.c ****           UART_Printf(s);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****           openDoor();
 156:Core/Src/main.c ****         }
 157:Core/Src/main.c ****         else
 158:Core/Src/main.c ****         {
 159:Core/Src/main.c ****           UART_Printf("Attempted to open the door with a wrong key.");
 160:Core/Src/main.c ****         }
 161:Core/Src/main.c ****       }
 162:Core/Src/main.c ****       else if(workMode == 1)
 163:Core/Src/main.c ****       {
 164:Core/Src/main.c ****         UART_Printf("Door is closed.\r\n");
 165:Core/Src/main.c ****         blink(2);
 166:Core/Src/main.c ****       }
 167:Core/Src/main.c ****       else if(workMode == 2)
 168:Core/Src/main.c ****       {
 169:Core/Src/main.c ****         UART_Printf("Door is opened by default.\r\n");
 170:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 171:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 172:Core/Src/main.c ****       }
 173:Core/Src/main.c ****       else if(workMode == 3)
 174:Core/Src/main.c ****       {
 175:Core/Src/main.c ****         UART_Printf("Door is now opened by default.\r\n");
 176:Core/Src/main.c ****         blink(1);
 177:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 178:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 179:Core/Src/main.c ****         workMode = 2;
 180:Core/Src/main.c ****       }
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c ****     /* USER CODE END WHILE */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE END 3 */
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief System Clock Configuration
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** void SystemClock_Config(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 196:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 199:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 5


 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 207:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 214:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief USART1 Initialization Function
 228:Core/Src/main.c ****   * @param None
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 241:Core/Src/main.c ****   huart1.Instance = USART1;
 242:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 243:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 244:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 245:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 246:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 247:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 248:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 249:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     Error_Handler();
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****   * @brief GPIO Initialization Function
 261:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 6


 262:Core/Src/main.c ****   * @retval None
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** static void MX_GPIO_Init(void)
 265:Core/Src/main.c **** {
  26              		.loc 1 265 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 266:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 266 3 view .LVU1
  41              		.loc 1 266 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0494     		str	r4, [sp, #16]
  44 0008 0594     		str	r4, [sp, #20]
  45 000a 0694     		str	r4, [sp, #24]
  46 000c 0794     		str	r4, [sp, #28]
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 269:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 269 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 269 3 view .LVU4
  50              		.loc 1 269 3 view .LVU5
  51 000e 364B     		ldr	r3, .L3
  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 42F01002 		orr	r2, r2, #16
  54 0016 9A61     		str	r2, [r3, #24]
  55              		.loc 1 269 3 view .LVU6
  56 0018 9A69     		ldr	r2, [r3, #24]
  57 001a 02F01002 		and	r2, r2, #16
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 269 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 269 3 view .LVU8
 270:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 270 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 270 3 view .LVU10
  66              		.loc 1 270 3 view .LVU11
  67 0022 9A69     		ldr	r2, [r3, #24]
  68 0024 42F00802 		orr	r2, r2, #8
  69 0028 9A61     		str	r2, [r3, #24]
  70              		.loc 1 270 3 view .LVU12
  71 002a 9A69     		ldr	r2, [r3, #24]
  72 002c 02F00802 		and	r2, r2, #8
  73 0030 0292     		str	r2, [sp, #8]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 7


  74              		.loc 1 270 3 view .LVU13
  75 0032 029A     		ldr	r2, [sp, #8]
  76              	.LBE5:
  77              		.loc 1 270 3 view .LVU14
 271:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 271 3 view .LVU15
  79              	.LBB6:
  80              		.loc 1 271 3 view .LVU16
  81              		.loc 1 271 3 view .LVU17
  82 0034 9A69     		ldr	r2, [r3, #24]
  83 0036 42F00402 		orr	r2, r2, #4
  84 003a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 271 3 view .LVU18
  86 003c 9B69     		ldr	r3, [r3, #24]
  87 003e 03F00403 		and	r3, r3, #4
  88 0042 0393     		str	r3, [sp, #12]
  89              		.loc 1 271 3 view .LVU19
  90 0044 039B     		ldr	r3, [sp, #12]
  91              	.LBE6:
  92              		.loc 1 271 3 view .LVU20
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 274:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, Zumer1_Pin|Zumer2_Pin|GreenLed_1_Pin|GreenLed_2_Pin, GPIO_PIN_SET);
  93              		.loc 1 274 3 view .LVU21
  94 0046 294D     		ldr	r5, .L3+4
  95 0048 0122     		movs	r2, #1
  96 004a 4FF44C41 		mov	r1, #52224
  97 004e 2846     		mov	r0, r5
  98 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /*Configure GPIO pins : D_01_Pin D_11_Pin D_02_Pin D_12_Pin
 277:Core/Src/main.c ****                            Door_Pin */
 278:Core/Src/main.c ****   GPIO_InitStruct.Pin = D_01_Pin|D_11_Pin|D_02_Pin|D_12_Pin
 100              		.loc 1 278 3 view .LVU22
 101              		.loc 1 278 23 is_stmt 0 view .LVU23
 102 0054 40F2C313 		movw	r3, #451
 103 0058 0493     		str	r3, [sp, #16]
 279:Core/Src/main.c ****                           |Door_Pin;
 280:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 104              		.loc 1 280 3 is_stmt 1 view .LVU24
 105              		.loc 1 280 24 is_stmt 0 view .LVU25
 106 005a 254B     		ldr	r3, .L3+8
 107 005c 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 281 3 is_stmt 1 view .LVU26
 109              		.loc 1 281 24 is_stmt 0 view .LVU27
 110 005e 0694     		str	r4, [sp, #24]
 282:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 111              		.loc 1 282 3 is_stmt 1 view .LVU28
 112 0060 244E     		ldr	r6, .L3+12
 113 0062 04A9     		add	r1, sp, #16
 114 0064 3046     		mov	r0, r6
 115 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 116              	.LVL1:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /*Configure GPIO pins : BT_0_Pin BT_1_Pin */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 8


 285:Core/Src/main.c ****   GPIO_InitStruct.Pin = BT_0_Pin|BT_1_Pin;
 117              		.loc 1 285 3 view .LVU29
 118              		.loc 1 285 23 is_stmt 0 view .LVU30
 119 006a 0C23     		movs	r3, #12
 120 006c 0493     		str	r3, [sp, #16]
 286:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 121              		.loc 1 286 3 is_stmt 1 view .LVU31
 122              		.loc 1 286 24 is_stmt 0 view .LVU32
 123 006e 224B     		ldr	r3, .L3+16
 124 0070 0593     		str	r3, [sp, #20]
 287:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 125              		.loc 1 287 3 is_stmt 1 view .LVU33
 126              		.loc 1 287 24 is_stmt 0 view .LVU34
 127 0072 0694     		str	r4, [sp, #24]
 288:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 128              		.loc 1 288 3 is_stmt 1 view .LVU35
 129 0074 04A9     		add	r1, sp, #16
 130 0076 3046     		mov	r0, r6
 131 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL2:
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /*Configure GPIO pins : Zumer1_Pin Zumer2_Pin GreenLed_1_Pin GreenLed_2_Pin */
 291:Core/Src/main.c ****   GPIO_InitStruct.Pin = Zumer1_Pin|Zumer2_Pin|GreenLed_1_Pin|GreenLed_2_Pin;
 133              		.loc 1 291 3 view .LVU36
 134              		.loc 1 291 23 is_stmt 0 view .LVU37
 135 007c 4FF44C43 		mov	r3, #52224
 136 0080 0493     		str	r3, [sp, #16]
 292:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 137              		.loc 1 292 3 is_stmt 1 view .LVU38
 138              		.loc 1 292 24 is_stmt 0 view .LVU39
 139 0082 0123     		movs	r3, #1
 140 0084 0593     		str	r3, [sp, #20]
 293:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 293 3 is_stmt 1 view .LVU40
 142              		.loc 1 293 24 is_stmt 0 view .LVU41
 143 0086 0694     		str	r4, [sp, #24]
 294:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 144              		.loc 1 294 3 is_stmt 1 view .LVU42
 145              		.loc 1 294 25 is_stmt 0 view .LVU43
 146 0088 0223     		movs	r3, #2
 147 008a 0793     		str	r3, [sp, #28]
 295:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 148              		.loc 1 295 3 is_stmt 1 view .LVU44
 149 008c 04A9     		add	r1, sp, #16
 150 008e 2846     		mov	r0, r5
 151 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL3:
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* EXTI interrupt init*/
 298:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 153              		.loc 1 298 3 view .LVU45
 154 0094 2246     		mov	r2, r4
 155 0096 2146     		mov	r1, r4
 156 0098 0620     		movs	r0, #6
 157 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL4:
 299:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 9


 159              		.loc 1 299 3 view .LVU46
 160 009e 0620     		movs	r0, #6
 161 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 162              	.LVL5:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 163              		.loc 1 301 3 view .LVU47
 164 00a4 2246     		mov	r2, r4
 165 00a6 2146     		mov	r1, r4
 166 00a8 0720     		movs	r0, #7
 167 00aa FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL6:
 302:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 169              		.loc 1 302 3 view .LVU48
 170 00ae 0720     		movs	r0, #7
 171 00b0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 172              	.LVL7:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 173              		.loc 1 304 3 view .LVU49
 174 00b4 2246     		mov	r2, r4
 175 00b6 2146     		mov	r1, r4
 176 00b8 0820     		movs	r0, #8
 177 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL8:
 305:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 179              		.loc 1 305 3 view .LVU50
 180 00be 0820     		movs	r0, #8
 181 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL9:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 183              		.loc 1 307 3 view .LVU51
 184 00c4 2246     		mov	r2, r4
 185 00c6 2146     		mov	r1, r4
 186 00c8 0920     		movs	r0, #9
 187 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 188              	.LVL10:
 308:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 189              		.loc 1 308 3 view .LVU52
 190 00ce 0920     		movs	r0, #9
 191 00d0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 192              	.LVL11:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 193              		.loc 1 310 3 view .LVU53
 194 00d4 2246     		mov	r2, r4
 195 00d6 2146     		mov	r1, r4
 196 00d8 1720     		movs	r0, #23
 197 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL12:
 311:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 199              		.loc 1 311 3 view .LVU54
 200 00de 1720     		movs	r0, #23
 201 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 202              	.LVL13:
 312:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 10


 313:Core/Src/main.c **** }
 203              		.loc 1 313 1 is_stmt 0 view .LVU55
 204 00e4 08B0     		add	sp, sp, #32
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 16
 207              		@ sp needed
 208 00e6 70BD     		pop	{r4, r5, r6, pc}
 209              	.L4:
 210              		.align	2
 211              	.L3:
 212 00e8 00100240 		.word	1073876992
 213 00ec 000C0140 		.word	1073810432
 214 00f0 00002110 		.word	270598144
 215 00f4 00100140 		.word	1073811456
 216 00f8 00001110 		.word	269549568
 217              		.cfi_endproc
 218              	.LFE78:
 220              		.section	.text.verifyCode,"ax",%progbits
 221              		.align	1
 222              		.global	verifyCode
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu softvfp
 228              	verifyCode:
 229              	.LVL14:
 230              	.LFB80:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 318:Core/Src/main.c **** {
 319:Core/Src/main.c ****   if(GPIO_Pin == BT_0_Pin || GPIO_Pin == BT_1_Pin)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     UART_Printf("Door was opened by a button.\r\n");
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****     isDoorOpened = true;
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****     openDoor();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   else if(GPIO_Pin == Door_Pin)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     isDoorOpened = false;
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****     if(workMode != 2)
 332:Core/Src/main.c ****     {
 333:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, SET);
 334:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 335:Core/Src/main.c ****     }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****     isDoorOpened = false;
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   else if( wig_flag_inrt && ( GPIO_Pin == D_01_Pin || GPIO_Pin == D_02_Pin) )
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     ReadD0();
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c ****   else if( wig_flag_inrt && ( GPIO_Pin == D_11_Pin || GPIO_Pin == D_12_Pin) )
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 11


 344:Core/Src/main.c ****   {
 345:Core/Src/main.c ****     ReadD1();
 346:Core/Src/main.c ****   }
 347:Core/Src/main.c ****   else
 348:Core/Src/main.c ****   {
 349:Core/Src/main.c ****     __NOP();
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c **** }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /*
 354:Core/Src/main.c ****   verify if code is valid
 355:Core/Src/main.c **** */
 356:Core/Src/main.c **** bool verifyCode(uint32_t code){
 231              		.loc 1 356 31 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 357:Core/Src/main.c ****   uint32_t codes[] = {
 236              		.loc 1 357 3 view .LVU57
 358:Core/Src/main.c ****     12563593
 359:Core/Src/main.c ****   };
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   for(int i = 0; i < sizeof(codes)/sizeof(codes[0]); i++){
 237              		.loc 1 361 3 view .LVU58
 238              	.LBB7:
 239              		.loc 1 361 7 view .LVU59
 240              		.loc 1 361 11 is_stmt 0 view .LVU60
 241 0000 0023     		movs	r3, #0
 242              	.LVL15:
 243              	.L6:
 244              		.loc 1 361 18 is_stmt 1 discriminator 1 view .LVU61
 245              		.loc 1 361 3 is_stmt 0 discriminator 1 view .LVU62
 246 0002 0BB1     		cbz	r3, .L8
 247              	.LBE7:
 362:Core/Src/main.c ****     if(code == codes[i])
 363:Core/Src/main.c ****       return true;
 364:Core/Src/main.c ****   }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   return false;
 248              		.loc 1 366 10 view .LVU63
 249 0004 0020     		movs	r0, #0
 250              	.LVL16:
 251              	.LBB8:
 252              		.loc 1 366 10 view .LVU64
 253 0006 7047     		bx	lr
 254              	.LVL17:
 255              	.L8:
 362:Core/Src/main.c ****     if(code == codes[i])
 256              		.loc 1 362 5 is_stmt 1 view .LVU65
 362:Core/Src/main.c ****     if(code == codes[i])
 257              		.loc 1 362 7 is_stmt 0 view .LVU66
 258 0008 034A     		ldr	r2, .L10
 259 000a 9042     		cmp	r0, r2
 260 000c 01D0     		beq	.L9
 361:Core/Src/main.c ****     if(code == codes[i])
 261              		.loc 1 361 54 is_stmt 1 discriminator 2 view .LVU67
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 12


 361:Core/Src/main.c ****     if(code == codes[i])
 262              		.loc 1 361 55 is_stmt 0 discriminator 2 view .LVU68
 263 000e 0133     		adds	r3, r3, #1
 264              	.LVL18:
 361:Core/Src/main.c ****     if(code == codes[i])
 265              		.loc 1 361 55 discriminator 2 view .LVU69
 266 0010 F7E7     		b	.L6
 267              	.L9:
 363:Core/Src/main.c ****   }
 268              		.loc 1 363 14 view .LVU70
 269 0012 0120     		movs	r0, #1
 270              	.LVL19:
 363:Core/Src/main.c ****   }
 271              		.loc 1 363 14 view .LVU71
 272              	.LBE8:
 367:Core/Src/main.c **** }
 273              		.loc 1 367 1 view .LVU72
 274 0014 7047     		bx	lr
 275              	.L11:
 276 0016 00BF     		.align	2
 277              	.L10:
 278 0018 89B4BF00 		.word	12563593
 279              		.cfi_endproc
 280              	.LFE80:
 282              		.section	.text.UART_Printf,"ax",%progbits
 283              		.align	1
 284              		.global	UART_Printf
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	UART_Printf:
 291              	.LVL20:
 292              	.LFB81:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /*
 370:Core/Src/main.c ****   print a string to the terminal
 371:Core/Src/main.c **** */
 372:Core/Src/main.c **** void UART_Printf(const char *fmt, ...){
 293              		.loc 1 372 39 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 4, pretend = 16, frame = 264
 296              		@ frame_needed = 0, uses_anonymous_args = 1
 297              		.loc 1 372 39 is_stmt 0 view .LVU74
 298 0000 0FB4     		push	{r0, r1, r2, r3}
 299              	.LCFI3:
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 0, -16
 302              		.cfi_offset 1, -12
 303              		.cfi_offset 2, -8
 304              		.cfi_offset 3, -4
 305 0002 00B5     		push	{lr}
 306              	.LCFI4:
 307              		.cfi_def_cfa_offset 20
 308              		.cfi_offset 14, -20
 309 0004 C3B0     		sub	sp, sp, #268
 310              	.LCFI5:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 13


 311              		.cfi_def_cfa_offset 288
 312 0006 44AB     		add	r3, sp, #272
 313 0008 53F8042B 		ldr	r2, [r3], #4
 373:Core/Src/main.c ****   char buff[256];
 314              		.loc 1 373 3 is_stmt 1 view .LVU75
 374:Core/Src/main.c ****   va_list args;
 315              		.loc 1 374 3 view .LVU76
 375:Core/Src/main.c ****   va_start(args, fmt);
 316              		.loc 1 375 3 view .LVU77
 317 000c 0193     		str	r3, [sp, #4]
 376:Core/Src/main.c ****   vsnprintf(buff, sizeof(buff), fmt, args);
 318              		.loc 1 376 3 view .LVU78
 319 000e 4FF48071 		mov	r1, #256
 320 0012 02A8     		add	r0, sp, #8
 321 0014 FFF7FEFF 		bl	vsnprintf
 322              	.LVL21:
 377:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)buff, strlen(buff), HAL_MAX_DELAY);
 323              		.loc 1 377 3 view .LVU79
 324              		.loc 1 377 47 is_stmt 0 view .LVU80
 325 0018 02A8     		add	r0, sp, #8
 326 001a FFF7FEFF 		bl	strlen
 327              	.LVL22:
 328              		.loc 1 377 3 view .LVU81
 329 001e 4FF0FF33 		mov	r3, #-1
 330 0022 82B2     		uxth	r2, r0
 331 0024 02A9     		add	r1, sp, #8
 332 0026 0448     		ldr	r0, .L14
 333 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 334              	.LVL23:
 378:Core/Src/main.c ****   va_end(args);
 335              		.loc 1 378 3 is_stmt 1 view .LVU82
 379:Core/Src/main.c **** }
 336              		.loc 1 379 1 is_stmt 0 view .LVU83
 337 002c 43B0     		add	sp, sp, #268
 338              	.LCFI6:
 339              		.cfi_def_cfa_offset 20
 340              		@ sp needed
 341 002e 5DF804EB 		ldr	lr, [sp], #4
 342              	.LCFI7:
 343              		.cfi_restore 14
 344              		.cfi_def_cfa_offset 16
 345 0032 04B0     		add	sp, sp, #16
 346              	.LCFI8:
 347              		.cfi_restore 3
 348              		.cfi_restore 2
 349              		.cfi_restore 1
 350              		.cfi_restore 0
 351              		.cfi_def_cfa_offset 0
 352 0034 7047     		bx	lr
 353              	.L15:
 354 0036 00BF     		.align	2
 355              	.L14:
 356 0038 00000000 		.word	.LANCHOR0
 357              		.cfi_endproc
 358              	.LFE81:
 360              		.section	.text.blink,"ax",%progbits
 361              		.align	1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 14


 362              		.global	blink
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 366              		.fpu softvfp
 368              	blink:
 369              	.LVL24:
 370              	.LFB85:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /*
 382:Core/Src/main.c ****   check for the mode and work by it
 383:Core/Src/main.c **** */
 384:Core/Src/main.c **** bool verifyMode()
 385:Core/Src/main.c **** {
 386:Core/Src/main.c ****   switch(workMode){
 387:Core/Src/main.c ****     case 0:
 388:Core/Src/main.c ****     {
 389:Core/Src/main.c ****       return true;
 390:Core/Src/main.c ****       break;
 391:Core/Src/main.c ****     }
 392:Core/Src/main.c ****     case 1:
 393:Core/Src/main.c ****     { 
 394:Core/Src/main.c ****       UART_Printf("Door is closed.\r\n");
 395:Core/Src/main.c ****       blink(3);
 396:Core/Src/main.c ****       return false;
 397:Core/Src/main.c ****       break;
 398:Core/Src/main.c ****     }
 399:Core/Src/main.c ****     case 2:
 400:Core/Src/main.c ****     {
 401:Core/Src/main.c ****       UART_Printf("Door is opened by default.\r\n");
 402:Core/Src/main.c ****       return false;
 403:Core/Src/main.c ****       break;
 404:Core/Src/main.c ****     }
 405:Core/Src/main.c ****     case 3:
 406:Core/Src/main.c ****     {
 407:Core/Src/main.c ****       blink(1);
 408:Core/Src/main.c ****       workMode = 2;
 409:Core/Src/main.c ****       return false;
 410:Core/Src/main.c ****       break;
 411:Core/Src/main.c ****     }
 412:Core/Src/main.c ****     default:
 413:Core/Src/main.c ****     {
 414:Core/Src/main.c ****       return false;
 415:Core/Src/main.c ****       break;
 416:Core/Src/main.c ****     }
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   return false;
 420:Core/Src/main.c **** }
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /*
 423:Core/Src/main.c ****   increment mode by one if it's not 3, then set it to 0
 424:Core/Src/main.c **** */
 425:Core/Src/main.c **** void switchMode()
 426:Core/Src/main.c **** {
 427:Core/Src/main.c ****   if(workMode < 3){
 428:Core/Src/main.c ****     workMode++;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 15


 429:Core/Src/main.c ****     switchedModes();
 430:Core/Src/main.c ****     return;
 431:Core/Src/main.c ****   }
 432:Core/Src/main.c ****   else if(workMode >= 3){
 433:Core/Src/main.c ****     workMode = 0;
 434:Core/Src/main.c ****     switchedModes();
 435:Core/Src/main.c ****     return;
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   else{
 438:Core/Src/main.c ****     UART_Printf("Unable to switch modes. \r\n");
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c **** }
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** /*
 443:Core/Src/main.c ****   print switching modes
 444:Core/Src/main.c **** */
 445:Core/Src/main.c **** void switchedModes()
 446:Core/Src/main.c **** {
 447:Core/Src/main.c ****   UART_Printf("Switched to mode %d\r\n", workMode);
 448:Core/Src/main.c ****   blink(1);
 449:Core/Src/main.c ****   HAL_Delay(500);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   blink(workMode);
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   if(workMode == 2)
 454:Core/Src/main.c ****   {
 455:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 456:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c **** }
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** /*
 461:Core/Src/main.c ****   blink blinkTimes times
 462:Core/Src/main.c **** */
 463:Core/Src/main.c **** void blink(int blinkTimes)
 464:Core/Src/main.c **** {
 371              		.loc 1 464 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		.loc 1 464 1 is_stmt 0 view .LVU85
 376 0000 70B5     		push	{r4, r5, r6, lr}
 377              	.LCFI9:
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 4, -16
 380              		.cfi_offset 5, -12
 381              		.cfi_offset 6, -8
 382              		.cfi_offset 14, -4
 383 0002 0646     		mov	r6, r0
 465:Core/Src/main.c ****   for(int i = 0; i < blinkTimes; i++)
 384              		.loc 1 465 3 is_stmt 1 view .LVU86
 385              	.LBB9:
 386              		.loc 1 465 7 view .LVU87
 387              	.LVL25:
 388              		.loc 1 465 11 is_stmt 0 view .LVU88
 389 0004 0025     		movs	r5, #0
 390              		.loc 1 465 3 view .LVU89
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 16


 391 0006 21E0     		b	.L17
 392              	.LVL26:
 393              	.L18:
 466:Core/Src/main.c ****   {
 467:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 394              		.loc 1 467 5 is_stmt 1 discriminator 3 view .LVU90
 395 0008 124C     		ldr	r4, .L20
 396 000a 0022     		movs	r2, #0
 397 000c 4FF48041 		mov	r1, #16384
 398 0010 2046     		mov	r0, r4
 399 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 400              	.LVL27:
 468:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 401              		.loc 1 468 5 discriminator 3 view .LVU91
 402 0016 0022     		movs	r2, #0
 403 0018 4FF40041 		mov	r1, #32768
 404 001c 2046     		mov	r0, r4
 405 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL28:
 469:Core/Src/main.c ****     HAL_Delay(500);
 407              		.loc 1 469 5 discriminator 3 view .LVU92
 408 0022 4FF4FA70 		mov	r0, #500
 409 0026 FFF7FEFF 		bl	HAL_Delay
 410              	.LVL29:
 470:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, SET);
 411              		.loc 1 470 5 discriminator 3 view .LVU93
 412 002a 0122     		movs	r2, #1
 413 002c 4FF48041 		mov	r1, #16384
 414 0030 2046     		mov	r0, r4
 415 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 416              	.LVL30:
 471:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 417              		.loc 1 471 5 discriminator 3 view .LVU94
 418 0036 0122     		movs	r2, #1
 419 0038 4FF40041 		mov	r1, #32768
 420 003c 2046     		mov	r0, r4
 421 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 422              	.LVL31:
 472:Core/Src/main.c ****     HAL_Delay(500);
 423              		.loc 1 472 5 discriminator 3 view .LVU95
 424 0042 4FF4FA70 		mov	r0, #500
 425 0046 FFF7FEFF 		bl	HAL_Delay
 426              	.LVL32:
 465:Core/Src/main.c ****   {
 427              		.loc 1 465 34 discriminator 3 view .LVU96
 465:Core/Src/main.c ****   {
 428              		.loc 1 465 35 is_stmt 0 discriminator 3 view .LVU97
 429 004a 0135     		adds	r5, r5, #1
 430              	.LVL33:
 431              	.L17:
 465:Core/Src/main.c ****   {
 432              		.loc 1 465 18 is_stmt 1 discriminator 1 view .LVU98
 465:Core/Src/main.c ****   {
 433              		.loc 1 465 3 is_stmt 0 discriminator 1 view .LVU99
 434 004c B542     		cmp	r5, r6
 435 004e DBDB     		blt	.L18
 436              	.LBE9:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 17


 473:Core/Src/main.c ****   }
 474:Core/Src/main.c **** }
 437              		.loc 1 474 1 view .LVU100
 438 0050 70BD     		pop	{r4, r5, r6, pc}
 439              	.LVL34:
 440              	.L21:
 441              		.loc 1 474 1 view .LVU101
 442 0052 00BF     		.align	2
 443              	.L20:
 444 0054 000C0140 		.word	1073810432
 445              		.cfi_endproc
 446              	.LFE85:
 448              		.section	.rodata.verifyMode.str1.4,"aMS",%progbits,1
 449              		.align	2
 450              	.LC0:
 451 0000 446F6F72 		.ascii	"Door is closed.\015\012\000"
 451      20697320 
 451      636C6F73 
 451      65642E0D 
 451      0A00
 452 0012 0000     		.align	2
 453              	.LC1:
 454 0014 446F6F72 		.ascii	"Door is opened by default.\015\012\000"
 454      20697320 
 454      6F70656E 
 454      65642062 
 454      79206465 
 455              		.section	.text.verifyMode,"ax",%progbits
 456              		.align	1
 457              		.global	verifyMode
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu softvfp
 463              	verifyMode:
 464              	.LFB82:
 385:Core/Src/main.c ****   switch(workMode){
 465              		.loc 1 385 1 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 08B5     		push	{r3, lr}
 470              	.LCFI10:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 3, -8
 473              		.cfi_offset 14, -4
 386:Core/Src/main.c ****     case 0:
 474              		.loc 1 386 3 view .LVU103
 475 0002 104B     		ldr	r3, .L31
 476 0004 1B68     		ldr	r3, [r3]
 477 0006 032B     		cmp	r3, #3
 478 0008 1AD8     		bhi	.L29
 479 000a DFE803F0 		tbb	[pc, r3]
 480              	.L25:
 481 000e 02       		.byte	(.L28-.L25)/2
 482 000f 04       		.byte	(.L27-.L25)/2
 483 0010 0C       		.byte	(.L26-.L25)/2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 18


 484 0011 11       		.byte	(.L24-.L25)/2
 485              		.p2align 1
 486              	.L28:
 487 0012 0120     		movs	r0, #1
 488              	.L23:
 420:Core/Src/main.c **** 
 489              		.loc 1 420 1 is_stmt 0 view .LVU104
 490 0014 08BD     		pop	{r3, pc}
 491              	.L27:
 390:Core/Src/main.c ****     }
 492              		.loc 1 390 7 is_stmt 1 view .LVU105
 394:Core/Src/main.c ****       blink(3);
 493              		.loc 1 394 7 view .LVU106
 494 0016 0C48     		ldr	r0, .L31+4
 495 0018 FFF7FEFF 		bl	UART_Printf
 496              	.LVL35:
 395:Core/Src/main.c ****       return false;
 497              		.loc 1 395 7 view .LVU107
 498 001c 0320     		movs	r0, #3
 499 001e FFF7FEFF 		bl	blink
 500              	.LVL36:
 396:Core/Src/main.c ****       break;
 501              		.loc 1 396 7 view .LVU108
 396:Core/Src/main.c ****       break;
 502              		.loc 1 396 14 is_stmt 0 view .LVU109
 503 0022 0020     		movs	r0, #0
 504 0024 F6E7     		b	.L23
 505              	.L26:
 397:Core/Src/main.c ****     }
 506              		.loc 1 397 7 is_stmt 1 view .LVU110
 401:Core/Src/main.c ****       return false;
 507              		.loc 1 401 7 view .LVU111
 508 0026 0948     		ldr	r0, .L31+8
 509 0028 FFF7FEFF 		bl	UART_Printf
 510              	.LVL37:
 402:Core/Src/main.c ****       break;
 511              		.loc 1 402 7 view .LVU112
 402:Core/Src/main.c ****       break;
 512              		.loc 1 402 14 is_stmt 0 view .LVU113
 513 002c 0020     		movs	r0, #0
 514 002e F1E7     		b	.L23
 515              	.L24:
 403:Core/Src/main.c ****     }
 516              		.loc 1 403 7 is_stmt 1 view .LVU114
 407:Core/Src/main.c ****       workMode = 2;
 517              		.loc 1 407 7 view .LVU115
 518 0030 0120     		movs	r0, #1
 519 0032 FFF7FEFF 		bl	blink
 520              	.LVL38:
 408:Core/Src/main.c ****       return false;
 521              		.loc 1 408 7 view .LVU116
 408:Core/Src/main.c ****       return false;
 522              		.loc 1 408 16 is_stmt 0 view .LVU117
 523 0036 034B     		ldr	r3, .L31
 524 0038 0222     		movs	r2, #2
 525 003a 1A60     		str	r2, [r3]
 409:Core/Src/main.c ****       break;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 19


 526              		.loc 1 409 7 is_stmt 1 view .LVU118
 409:Core/Src/main.c ****       break;
 527              		.loc 1 409 14 is_stmt 0 view .LVU119
 528 003c 0020     		movs	r0, #0
 529 003e E9E7     		b	.L23
 530              	.L29:
 414:Core/Src/main.c ****       break;
 531              		.loc 1 414 14 view .LVU120
 532 0040 0020     		movs	r0, #0
 533 0042 E7E7     		b	.L23
 534              	.L32:
 535              		.align	2
 536              	.L31:
 537 0044 00000000 		.word	.LANCHOR1
 538 0048 00000000 		.word	.LC0
 539 004c 14000000 		.word	.LC1
 540              		.cfi_endproc
 541              	.LFE82:
 543              		.section	.rodata.switchedModes.str1.4,"aMS",%progbits,1
 544              		.align	2
 545              	.LC2:
 546 0000 53776974 		.ascii	"Switched to mode %d\015\012\000"
 546      63686564 
 546      20746F20 
 546      6D6F6465 
 546      2025640D 
 547              		.section	.text.switchedModes,"ax",%progbits
 548              		.align	1
 549              		.global	switchedModes
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu softvfp
 555              	switchedModes:
 556              	.LFB84:
 446:Core/Src/main.c ****   UART_Printf("Switched to mode %d\r\n", workMode);
 557              		.loc 1 446 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561 0000 10B5     		push	{r4, lr}
 562              	.LCFI11:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 4, -8
 565              		.cfi_offset 14, -4
 447:Core/Src/main.c ****   blink(1);
 566              		.loc 1 447 3 view .LVU122
 567 0002 104C     		ldr	r4, .L37
 568 0004 2168     		ldr	r1, [r4]
 569 0006 1048     		ldr	r0, .L37+4
 570 0008 FFF7FEFF 		bl	UART_Printf
 571              	.LVL39:
 448:Core/Src/main.c ****   HAL_Delay(500);
 572              		.loc 1 448 3 view .LVU123
 573 000c 0120     		movs	r0, #1
 574 000e FFF7FEFF 		bl	blink
 575              	.LVL40:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 20


 449:Core/Src/main.c **** 
 576              		.loc 1 449 3 view .LVU124
 577 0012 4FF4FA70 		mov	r0, #500
 578 0016 FFF7FEFF 		bl	HAL_Delay
 579              	.LVL41:
 451:Core/Src/main.c **** 
 580              		.loc 1 451 3 view .LVU125
 581 001a 2068     		ldr	r0, [r4]
 582 001c FFF7FEFF 		bl	blink
 583              	.LVL42:
 453:Core/Src/main.c ****   {
 584              		.loc 1 453 3 view .LVU126
 453:Core/Src/main.c ****   {
 585              		.loc 1 453 15 is_stmt 0 view .LVU127
 586 0020 2368     		ldr	r3, [r4]
 453:Core/Src/main.c ****   {
 587              		.loc 1 453 5 view .LVU128
 588 0022 022B     		cmp	r3, #2
 589 0024 00D0     		beq	.L36
 590              	.L33:
 458:Core/Src/main.c **** 
 591              		.loc 1 458 1 view .LVU129
 592 0026 10BD     		pop	{r4, pc}
 593              	.L36:
 455:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 594              		.loc 1 455 5 is_stmt 1 view .LVU130
 595 0028 084C     		ldr	r4, .L37+8
 596 002a 0022     		movs	r2, #0
 597 002c 4FF48041 		mov	r1, #16384
 598 0030 2046     		mov	r0, r4
 599 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 600              	.LVL43:
 456:Core/Src/main.c ****   }
 601              		.loc 1 456 5 view .LVU131
 602 0036 0022     		movs	r2, #0
 603 0038 4FF40041 		mov	r1, #32768
 604 003c 2046     		mov	r0, r4
 605 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 606              	.LVL44:
 458:Core/Src/main.c **** 
 607              		.loc 1 458 1 is_stmt 0 view .LVU132
 608 0042 F0E7     		b	.L33
 609              	.L38:
 610              		.align	2
 611              	.L37:
 612 0044 00000000 		.word	.LANCHOR1
 613 0048 00000000 		.word	.LC2
 614 004c 000C0140 		.word	1073810432
 615              		.cfi_endproc
 616              	.LFE84:
 618              		.section	.text.switchMode,"ax",%progbits
 619              		.align	1
 620              		.global	switchMode
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
 624              		.fpu softvfp
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 21


 626              	switchMode:
 627              	.LFB83:
 426:Core/Src/main.c ****   if(workMode < 3){
 628              		.loc 1 426 1 is_stmt 1 view -0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632 0000 08B5     		push	{r3, lr}
 633              	.LCFI12:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 3, -8
 636              		.cfi_offset 14, -4
 427:Core/Src/main.c ****     workMode++;
 637              		.loc 1 427 3 view .LVU134
 427:Core/Src/main.c ****     workMode++;
 638              		.loc 1 427 15 is_stmt 0 view .LVU135
 639 0002 084B     		ldr	r3, .L43
 640 0004 1B68     		ldr	r3, [r3]
 427:Core/Src/main.c ****     workMode++;
 641              		.loc 1 427 5 view .LVU136
 642 0006 022B     		cmp	r3, #2
 643 0008 05DC     		bgt	.L40
 428:Core/Src/main.c ****     switchedModes();
 644              		.loc 1 428 5 is_stmt 1 view .LVU137
 428:Core/Src/main.c ****     switchedModes();
 645              		.loc 1 428 13 is_stmt 0 view .LVU138
 646 000a 0133     		adds	r3, r3, #1
 647 000c 054A     		ldr	r2, .L43
 648 000e 1360     		str	r3, [r2]
 429:Core/Src/main.c ****     return;
 649              		.loc 1 429 5 is_stmt 1 view .LVU139
 650 0010 FFF7FEFF 		bl	switchedModes
 651              	.LVL45:
 430:Core/Src/main.c ****   }
 652              		.loc 1 430 5 view .LVU140
 653              	.L39:
 440:Core/Src/main.c **** 
 654              		.loc 1 440 1 is_stmt 0 view .LVU141
 655 0014 08BD     		pop	{r3, pc}
 656              	.L40:
 432:Core/Src/main.c ****     workMode = 0;
 657              		.loc 1 432 8 is_stmt 1 view .LVU142
 433:Core/Src/main.c ****     switchedModes();
 658              		.loc 1 433 5 view .LVU143
 433:Core/Src/main.c ****     switchedModes();
 659              		.loc 1 433 14 is_stmt 0 view .LVU144
 660 0016 034B     		ldr	r3, .L43
 661 0018 0022     		movs	r2, #0
 662 001a 1A60     		str	r2, [r3]
 434:Core/Src/main.c ****     return;
 663              		.loc 1 434 5 is_stmt 1 view .LVU145
 664 001c FFF7FEFF 		bl	switchedModes
 665              	.LVL46:
 435:Core/Src/main.c ****   }
 666              		.loc 1 435 5 view .LVU146
 667 0020 F8E7     		b	.L39
 668              	.L44:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 22


 669 0022 00BF     		.align	2
 670              	.L43:
 671 0024 00000000 		.word	.LANCHOR1
 672              		.cfi_endproc
 673              	.LFE83:
 675              		.section	.rodata.read.str1.4,"aMS",%progbits,1
 676              		.align	2
 677              	.LC3:
 678 0000 74657374 		.ascii	"test\015\012\000"
 678      0D0A00
 679 0007 00       		.align	2
 680              	.LC5:
 681 0008 256C7500 		.ascii	"%lu\000"
 682              		.align	2
 683              	.LC6:
 684 000c 2E0D0A00 		.ascii	".\015\012\000"
 685              		.align	2
 686              	.LC7:
 687 0010 41747465 		.ascii	"Attempted to open the door with a wrong key.\000"
 687      6D707465 
 687      6420746F 
 687      206F7065 
 687      6E207468 
 688 003d 000000   		.align	2
 689              	.LC4:
 690 0040 446F6F72 		.ascii	"Door was opened by key. Key ID: \000"
 690      20776173 
 690      206F7065 
 690      6E656420 
 690      6279206B 
 691              		.section	.text.read,"ax",%progbits
 692              		.align	1
 693              		.global	read
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu softvfp
 699              	read:
 700              	.LFB86:
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** void read()
 477:Core/Src/main.c **** {
 701              		.loc 1 477 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 56
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              	.LCFI13:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 4, -16
 709              		.cfi_offset 5, -12
 710              		.cfi_offset 6, -8
 711              		.cfi_offset 14, -4
 712 0002 8EB0     		sub	sp, sp, #56
 713              	.LCFI14:
 714              		.cfi_def_cfa_offset 72
 478:Core/Src/main.c ****   // reading = true;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 23


 479:Core/Src/main.c ****   // HAL_Delay(36);
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   UART_Printf("test\r\n");
 715              		.loc 1 481 3 view .LVU148
 716 0004 2248     		ldr	r0, .L50
 717 0006 FFF7FEFF 		bl	UART_Printf
 718              	.LVL47:
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   if(wig_available())
 719              		.loc 1 483 3 view .LVU149
 720              		.loc 1 483 6 is_stmt 0 view .LVU150
 721 000a FFF7FEFF 		bl	wig_available
 722              	.LVL48:
 723              		.loc 1 483 5 view .LVU151
 724 000e 08B9     		cbnz	r0, .L49
 725              	.L45:
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     wig_flag_inrt = 0;
 486:Core/Src/main.c ****     uint32_t wcode = getCode();
 487:Core/Src/main.c ****     wig_flag_inrt = 1;
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 490:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****     if(verifyCode(wcode)){
 493:Core/Src/main.c ****       char s[] = "Door was opened by key. Key ID: ";
 494:Core/Src/main.c ****       char code[16];
 495:Core/Src/main.c ****       sprintf(code,"%lu", wcode);
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****       strcat(s, code);
 498:Core/Src/main.c ****       strcat(s, ".\r\n");
 499:Core/Src/main.c ****       UART_Printf(s);
 500:Core/Src/main.c ****     }
 501:Core/Src/main.c ****     else
 502:Core/Src/main.c ****     {
 503:Core/Src/main.c ****       UART_Printf("Attempted to open the door with a wrong key.");
 504:Core/Src/main.c ****     }
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   //reading = false;
 508:Core/Src/main.c **** }
 726              		.loc 1 508 1 view .LVU152
 727 0010 0EB0     		add	sp, sp, #56
 728              	.LCFI15:
 729              		.cfi_remember_state
 730              		.cfi_def_cfa_offset 16
 731              		@ sp needed
 732 0012 70BD     		pop	{r4, r5, r6, pc}
 733              	.L49:
 734              	.LCFI16:
 735              		.cfi_restore_state
 736              	.LBB10:
 485:Core/Src/main.c ****     uint32_t wcode = getCode();
 737              		.loc 1 485 5 is_stmt 1 view .LVU153
 485:Core/Src/main.c ****     uint32_t wcode = getCode();
 738              		.loc 1 485 19 is_stmt 0 view .LVU154
 739 0014 1F4E     		ldr	r6, .L50+4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 24


 740 0016 0024     		movs	r4, #0
 741 0018 3470     		strb	r4, [r6]
 486:Core/Src/main.c ****     wig_flag_inrt = 1;
 742              		.loc 1 486 5 is_stmt 1 view .LVU155
 486:Core/Src/main.c ****     wig_flag_inrt = 1;
 743              		.loc 1 486 22 is_stmt 0 view .LVU156
 744 001a FFF7FEFF 		bl	getCode
 745              	.LVL49:
 746 001e 0546     		mov	r5, r0
 747              	.LVL50:
 487:Core/Src/main.c **** 
 748              		.loc 1 487 5 is_stmt 1 view .LVU157
 487:Core/Src/main.c **** 
 749              		.loc 1 487 19 is_stmt 0 view .LVU158
 750 0020 0123     		movs	r3, #1
 751 0022 3370     		strb	r3, [r6]
 489:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 752              		.loc 1 489 5 is_stmt 1 view .LVU159
 753 0024 1C4E     		ldr	r6, .L50+8
 754 0026 2246     		mov	r2, r4
 755 0028 4FF48041 		mov	r1, #16384
 756 002c 3046     		mov	r0, r6
 757              	.LVL51:
 489:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 758              		.loc 1 489 5 is_stmt 0 view .LVU160
 759 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 760              	.LVL52:
 490:Core/Src/main.c **** 
 761              		.loc 1 490 5 is_stmt 1 view .LVU161
 762 0032 2246     		mov	r2, r4
 763 0034 4FF40041 		mov	r1, #32768
 764 0038 3046     		mov	r0, r6
 765 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 766              	.LVL53:
 492:Core/Src/main.c ****       char s[] = "Door was opened by key. Key ID: ";
 767              		.loc 1 492 5 view .LVU162
 492:Core/Src/main.c ****       char s[] = "Door was opened by key. Key ID: ";
 768              		.loc 1 492 8 is_stmt 0 view .LVU163
 769 003e 2846     		mov	r0, r5
 770 0040 FFF7FEFF 		bl	verifyCode
 771              	.LVL54:
 492:Core/Src/main.c ****       char s[] = "Door was opened by key. Key ID: ";
 772              		.loc 1 492 7 view .LVU164
 773 0044 00B3     		cbz	r0, .L47
 774              	.LBB11:
 493:Core/Src/main.c ****       char code[16];
 775              		.loc 1 493 7 is_stmt 1 view .LVU165
 493:Core/Src/main.c ****       char code[16];
 776              		.loc 1 493 12 is_stmt 0 view .LVU166
 777 0046 0DF1140C 		add	ip, sp, #20
 778 004a 144C     		ldr	r4, .L50+12
 779 004c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 780 004e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 781 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 782 0054 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 783 0058 2368     		ldr	r3, [r4]
 784 005a 8CF80030 		strb	r3, [ip]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 25


 494:Core/Src/main.c ****       sprintf(code,"%lu", wcode);
 785              		.loc 1 494 7 is_stmt 1 view .LVU167
 495:Core/Src/main.c **** 
 786              		.loc 1 495 7 view .LVU168
 787 005e 2A46     		mov	r2, r5
 788 0060 0F49     		ldr	r1, .L50+16
 789 0062 01A8     		add	r0, sp, #4
 790 0064 FFF7FEFF 		bl	sprintf
 791              	.LVL55:
 497:Core/Src/main.c ****       strcat(s, ".\r\n");
 792              		.loc 1 497 7 view .LVU169
 793 0068 05AC     		add	r4, sp, #20
 794 006a 01A9     		add	r1, sp, #4
 795 006c 2046     		mov	r0, r4
 796 006e FFF7FEFF 		bl	strcat
 797              	.LVL56:
 498:Core/Src/main.c ****       UART_Printf(s);
 798              		.loc 1 498 7 view .LVU170
 799 0072 2046     		mov	r0, r4
 800 0074 FFF7FEFF 		bl	strlen
 801              	.LVL57:
 802 0078 0346     		mov	r3, r0
 803 007a 0A4A     		ldr	r2, .L50+20
 804 007c 1068     		ldr	r0, [r2]
 805 007e E050     		str	r0, [r4, r3]	@ unaligned
 499:Core/Src/main.c ****     }
 806              		.loc 1 499 7 view .LVU171
 807 0080 2046     		mov	r0, r4
 808 0082 FFF7FEFF 		bl	UART_Printf
 809              	.LVL58:
 810              	.LBE11:
 811 0086 C3E7     		b	.L45
 812              	.L47:
 503:Core/Src/main.c ****     }
 813              		.loc 1 503 7 view .LVU172
 814 0088 0748     		ldr	r0, .L50+24
 815 008a FFF7FEFF 		bl	UART_Printf
 816              	.LVL59:
 817              	.LBE10:
 818              		.loc 1 508 1 is_stmt 0 view .LVU173
 819 008e BFE7     		b	.L45
 820              	.L51:
 821              		.align	2
 822              	.L50:
 823 0090 00000000 		.word	.LC3
 824 0094 00000000 		.word	.LANCHOR2
 825 0098 000C0140 		.word	1073810432
 826 009c 40000000 		.word	.LC4
 827 00a0 08000000 		.word	.LC5
 828 00a4 0C000000 		.word	.LC6
 829 00a8 10000000 		.word	.LC7
 830              		.cfi_endproc
 831              	.LFE86:
 833              		.section	.rodata.openDoor.str1.4,"aMS",%progbits,1
 834              		.align	2
 835              	.LC8:
 836 0000 446F6F72 		.ascii	"Door was closed.\015\012\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 26


 836      20776173 
 836      20636C6F 
 836      7365642E 
 836      0D0A00
 837              		.section	.text.openDoor,"ax",%progbits
 838              		.align	1
 839              		.global	openDoor
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu softvfp
 845              	openDoor:
 846              	.LFB87:
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** void openDoor()
 511:Core/Src/main.c **** {
 847              		.loc 1 511 1 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851 0000 38B5     		push	{r3, r4, r5, lr}
 852              	.LCFI17:
 853              		.cfi_def_cfa_offset 16
 854              		.cfi_offset 3, -16
 855              		.cfi_offset 4, -12
 856              		.cfi_offset 5, -8
 857              		.cfi_offset 14, -4
 512:Core/Src/main.c ****   isDoorOpened = true;
 858              		.loc 1 512 3 view .LVU175
 859              		.loc 1 512 16 is_stmt 0 view .LVU176
 860 0002 174B     		ldr	r3, .L57
 861 0004 0122     		movs	r2, #1
 862 0006 1A70     		strb	r2, [r3]
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   uint32_t auxTime = HAL_GetTick();
 863              		.loc 1 514 3 is_stmt 1 view .LVU177
 864              		.loc 1 514 22 is_stmt 0 view .LVU178
 865 0008 FFF7FEFF 		bl	HAL_GetTick
 866              	.LVL60:
 867 000c 0446     		mov	r4, r0
 868              	.LVL61:
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 869              		.loc 1 516 3 is_stmt 1 view .LVU179
 870 000e 154D     		ldr	r5, .L57+4
 871 0010 0022     		movs	r2, #0
 872 0012 4FF48041 		mov	r1, #16384
 873 0016 2846     		mov	r0, r5
 874              	.LVL62:
 875              		.loc 1 516 3 is_stmt 0 view .LVU180
 876 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 877              	.LVL63:
 517:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 878              		.loc 1 517 3 is_stmt 1 view .LVU181
 879 001c 0022     		movs	r2, #0
 880 001e 4FF40041 		mov	r1, #32768
 881 0022 2846     		mov	r0, r5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 27


 882 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 883              	.LVL64:
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   while((HAL_GetTick() - auxTime) < 3000)
 884              		.loc 1 519 3 view .LVU182
 885              	.L53:
 886              		.loc 1 519 8 view .LVU183
 887              		.loc 1 519 10 is_stmt 0 view .LVU184
 888 0028 FFF7FEFF 		bl	HAL_GetTick
 889              	.LVL65:
 890              		.loc 1 519 24 view .LVU185
 891 002c 001B     		subs	r0, r0, r4
 892              		.loc 1 519 8 view .LVU186
 893 002e 40F6B733 		movw	r3, #2999
 894 0032 9842     		cmp	r0, r3
 895 0034 13D8     		bhi	.L52
 520:Core/Src/main.c ****   {
 521:Core/Src/main.c ****     if(!isDoorOpened)
 896              		.loc 1 521 5 is_stmt 1 view .LVU187
 897              		.loc 1 521 8 is_stmt 0 view .LVU188
 898 0036 0A4B     		ldr	r3, .L57
 899 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900              		.loc 1 521 7 view .LVU189
 901 003a 002B     		cmp	r3, #0
 902 003c F4D1     		bne	.L53
 522:Core/Src/main.c ****     {
 523:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, SET);
 903              		.loc 1 523 7 is_stmt 1 view .LVU190
 904 003e 094C     		ldr	r4, .L57+4
 905              	.LVL66:
 906              		.loc 1 523 7 is_stmt 0 view .LVU191
 907 0040 0122     		movs	r2, #1
 908 0042 4FF48041 		mov	r1, #16384
 909 0046 2046     		mov	r0, r4
 910 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 911              	.LVL67:
 524:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 912              		.loc 1 524 7 is_stmt 1 view .LVU192
 913 004c 0122     		movs	r2, #1
 914 004e 4FF40041 		mov	r1, #32768
 915 0052 2046     		mov	r0, r4
 916 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 917              	.LVL68:
 525:Core/Src/main.c ****       UART_Printf("Door was closed.\r\n");
 918              		.loc 1 525 7 view .LVU193
 919 0058 0348     		ldr	r0, .L57+8
 920 005a FFF7FEFF 		bl	UART_Printf
 921              	.LVL69:
 526:Core/Src/main.c ****       break;
 922              		.loc 1 526 7 view .LVU194
 923              	.L52:
 527:Core/Src/main.c ****     }
 528:Core/Src/main.c ****   }
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   // uint32_t auxTime = HAL_GetTick();
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 28


 533:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   // UART_Printf("Door is opened.\r\n");
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****   // while((HAL_GetTick() - auxTime) < 3000)
 538:Core/Src/main.c ****   // {
 539:Core/Src/main.c ****   //   if(!isDoorOpened)
 540:Core/Src/main.c ****   //   {
 541:Core/Src/main.c ****       // HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, SET);
 542:Core/Src/main.c ****       // HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 543:Core/Src/main.c ****   //   }
 544:Core/Src/main.c ****   // }
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   // if(isDoorOpened)
 547:Core/Src/main.c ****   // {
 548:Core/Src/main.c ****   //   UART_Printf("Warning! Door is still opened!\r\n");
 549:Core/Src/main.c ****   // }
 550:Core/Src/main.c **** }
 924              		.loc 1 550 1 is_stmt 0 view .LVU195
 925 005e 38BD     		pop	{r3, r4, r5, pc}
 926              	.L58:
 927              		.align	2
 928              	.L57:
 929 0060 00000000 		.word	.LANCHOR3
 930 0064 000C0140 		.word	1073810432
 931 0068 00000000 		.word	.LC8
 932              		.cfi_endproc
 933              	.LFE87:
 935              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 936              		.align	2
 937              	.LC9:
 938 0000 446F6F72 		.ascii	"Door was opened by a button.\015\012\000"
 938      20776173 
 938      206F7065 
 938      6E656420 
 938      62792061 
 939              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 940              		.align	1
 941              		.global	HAL_GPIO_EXTI_Callback
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu softvfp
 947              	HAL_GPIO_EXTI_Callback:
 948              	.LVL70:
 949              	.LFB79:
 318:Core/Src/main.c ****   if(GPIO_Pin == BT_0_Pin || GPIO_Pin == BT_1_Pin)
 950              		.loc 1 318 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 318:Core/Src/main.c ****   if(GPIO_Pin == BT_0_Pin || GPIO_Pin == BT_1_Pin)
 954              		.loc 1 318 1 is_stmt 0 view .LVU197
 955 0000 10B5     		push	{r4, lr}
 956              	.LCFI18:
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 4, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 29


 959              		.cfi_offset 14, -4
 319:Core/Src/main.c ****   {
 960              		.loc 1 319 3 is_stmt 1 view .LVU198
 319:Core/Src/main.c ****   {
 961              		.loc 1 319 5 is_stmt 0 view .LVU199
 962 0002 0428     		cmp	r0, #4
 963 0004 14D0     		beq	.L60
 319:Core/Src/main.c ****   {
 964              		.loc 1 319 27 discriminator 1 view .LVU200
 965 0006 0828     		cmp	r0, #8
 966 0008 12D0     		beq	.L60
 327:Core/Src/main.c ****   {
 967              		.loc 1 327 8 is_stmt 1 view .LVU201
 327:Core/Src/main.c ****   {
 968              		.loc 1 327 10 is_stmt 0 view .LVU202
 969 000a B0F5807F 		cmp	r0, #256
 970 000e 18D0     		beq	.L70
 339:Core/Src/main.c ****   {
 971              		.loc 1 339 8 is_stmt 1 view .LVU203
 339:Core/Src/main.c ****   {
 972              		.loc 1 339 12 is_stmt 0 view .LVU204
 973 0010 1B4B     		ldr	r3, .L72
 974 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339:Core/Src/main.c ****   {
 975              		.loc 1 339 10 view .LVU205
 976 0014 1BB1     		cbz	r3, .L65
 339:Core/Src/main.c ****   {
 977              		.loc 1 339 26 discriminator 1 view .LVU206
 978 0016 0128     		cmp	r0, #1
 979 0018 2CD0     		beq	.L66
 339:Core/Src/main.c ****   {
 980              		.loc 1 339 52 discriminator 2 view .LVU207
 981 001a 4028     		cmp	r0, #64
 982 001c 2AD0     		beq	.L66
 983              	.L65:
 343:Core/Src/main.c ****   {
 984              		.loc 1 343 8 is_stmt 1 view .LVU208
 343:Core/Src/main.c ****   {
 985              		.loc 1 343 12 is_stmt 0 view .LVU209
 986 001e 184B     		ldr	r3, .L72
 987 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343:Core/Src/main.c ****   {
 988              		.loc 1 343 10 view .LVU210
 989 0022 1BB1     		cbz	r3, .L67
 343:Core/Src/main.c ****   {
 990              		.loc 1 343 26 discriminator 1 view .LVU211
 991 0024 0228     		cmp	r0, #2
 992 0026 28D0     		beq	.L68
 343:Core/Src/main.c ****   {
 993              		.loc 1 343 52 discriminator 2 view .LVU212
 994 0028 8028     		cmp	r0, #128
 995 002a 26D0     		beq	.L68
 996              	.L67:
 349:Core/Src/main.c ****   }
 997              		.loc 1 349 5 is_stmt 1 view .LVU213
 998              		.syntax unified
 999              	@ 349 "Core/Src/main.c" 1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 30


 1000 002c 00BF     		nop
 1001              	@ 0 "" 2
 351:Core/Src/main.c **** 
 1002              		.loc 1 351 1 is_stmt 0 view .LVU214
 1003              		.thumb
 1004              		.syntax unified
 1005 002e 07E0     		b	.L59
 1006              	.L60:
 321:Core/Src/main.c **** 
 1007              		.loc 1 321 5 is_stmt 1 view .LVU215
 1008 0030 1448     		ldr	r0, .L72+4
 1009              	.LVL71:
 321:Core/Src/main.c **** 
 1010              		.loc 1 321 5 is_stmt 0 view .LVU216
 1011 0032 FFF7FEFF 		bl	UART_Printf
 1012              	.LVL72:
 323:Core/Src/main.c **** 
 1013              		.loc 1 323 5 is_stmt 1 view .LVU217
 323:Core/Src/main.c **** 
 1014              		.loc 1 323 18 is_stmt 0 view .LVU218
 1015 0036 144B     		ldr	r3, .L72+8
 1016 0038 0122     		movs	r2, #1
 1017 003a 1A70     		strb	r2, [r3]
 325:Core/Src/main.c ****   }
 1018              		.loc 1 325 5 is_stmt 1 view .LVU219
 1019 003c FFF7FEFF 		bl	openDoor
 1020              	.LVL73:
 1021              	.L59:
 351:Core/Src/main.c **** 
 1022              		.loc 1 351 1 is_stmt 0 view .LVU220
 1023 0040 10BD     		pop	{r4, pc}
 1024              	.LVL74:
 1025              	.L70:
 329:Core/Src/main.c **** 
 1026              		.loc 1 329 5 is_stmt 1 view .LVU221
 329:Core/Src/main.c **** 
 1027              		.loc 1 329 18 is_stmt 0 view .LVU222
 1028 0042 114B     		ldr	r3, .L72+8
 1029 0044 0022     		movs	r2, #0
 1030 0046 1A70     		strb	r2, [r3]
 331:Core/Src/main.c ****     {
 1031              		.loc 1 331 5 is_stmt 1 view .LVU223
 331:Core/Src/main.c ****     {
 1032              		.loc 1 331 17 is_stmt 0 view .LVU224
 1033 0048 104B     		ldr	r3, .L72+12
 1034 004a 1B68     		ldr	r3, [r3]
 331:Core/Src/main.c ****     {
 1035              		.loc 1 331 7 view .LVU225
 1036 004c 022B     		cmp	r3, #2
 1037 004e 03D1     		bne	.L71
 1038              	.LVL75:
 1039              	.L64:
 337:Core/Src/main.c ****   }
 1040              		.loc 1 337 5 is_stmt 1 view .LVU226
 337:Core/Src/main.c ****   }
 1041              		.loc 1 337 18 is_stmt 0 view .LVU227
 1042 0050 0D4B     		ldr	r3, .L72+8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 31


 1043 0052 0022     		movs	r2, #0
 1044 0054 1A70     		strb	r2, [r3]
 1045 0056 F3E7     		b	.L59
 1046              	.LVL76:
 1047              	.L71:
 333:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 1048              		.loc 1 333 7 is_stmt 1 view .LVU228
 1049 0058 0D4C     		ldr	r4, .L72+16
 1050 005a 0122     		movs	r2, #1
 1051 005c 4FF48041 		mov	r1, #16384
 1052 0060 2046     		mov	r0, r4
 1053              	.LVL77:
 333:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, SET);
 1054              		.loc 1 333 7 is_stmt 0 view .LVU229
 1055 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1056              	.LVL78:
 334:Core/Src/main.c ****     }
 1057              		.loc 1 334 7 is_stmt 1 view .LVU230
 1058 0066 0122     		movs	r2, #1
 1059 0068 4FF40041 		mov	r1, #32768
 1060 006c 2046     		mov	r0, r4
 1061 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1062              	.LVL79:
 1063 0072 EDE7     		b	.L64
 1064              	.LVL80:
 1065              	.L66:
 341:Core/Src/main.c ****   }
 1066              		.loc 1 341 5 view .LVU231
 1067 0074 FFF7FEFF 		bl	ReadD0
 1068              	.LVL81:
 341:Core/Src/main.c ****   }
 1069              		.loc 1 341 5 is_stmt 0 view .LVU232
 1070 0078 E2E7     		b	.L59
 1071              	.LVL82:
 1072              	.L68:
 345:Core/Src/main.c ****   }
 1073              		.loc 1 345 5 is_stmt 1 view .LVU233
 1074 007a FFF7FEFF 		bl	ReadD1
 1075              	.LVL83:
 345:Core/Src/main.c ****   }
 1076              		.loc 1 345 5 is_stmt 0 view .LVU234
 1077 007e DFE7     		b	.L59
 1078              	.L73:
 1079              		.align	2
 1080              	.L72:
 1081 0080 00000000 		.word	.LANCHOR2
 1082 0084 00000000 		.word	.LC9
 1083 0088 00000000 		.word	.LANCHOR3
 1084 008c 00000000 		.word	.LANCHOR1
 1085 0090 000C0140 		.word	1073810432
 1086              		.cfi_endproc
 1087              	.LFE79:
 1089              		.section	.text.Error_Handler,"ax",%progbits
 1090              		.align	1
 1091              		.global	Error_Handler
 1092              		.syntax unified
 1093              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 32


 1094              		.thumb_func
 1095              		.fpu softvfp
 1097              	Error_Handler:
 1098              	.LFB88:
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /* USER CODE END 4 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** /**
 556:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 557:Core/Src/main.c ****   * @retval None
 558:Core/Src/main.c ****   */
 559:Core/Src/main.c **** void Error_Handler(void)
 560:Core/Src/main.c **** {
 1099              		.loc 1 560 1 is_stmt 1 view -0
 1100              		.cfi_startproc
 1101              		@ Volatile: function does not return.
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 561:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 562:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 563:Core/Src/main.c ****   __disable_irq();
 1105              		.loc 1 563 3 view .LVU236
 1106              	.LBB12:
 1107              	.LBI12:
 1108              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 33


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 34


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1109              		.loc 2 140 27 view .LVU237
 1110              	.LBB13:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 35


 1111              		.loc 2 142 3 view .LVU238
 1112              		.syntax unified
 1113              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1114 0000 72B6     		cpsid i
 1115              	@ 0 "" 2
 1116              		.thumb
 1117              		.syntax unified
 1118              	.L75:
 1119              	.LBE13:
 1120              	.LBE12:
 564:Core/Src/main.c ****   while (1)
 1121              		.loc 1 564 3 discriminator 1 view .LVU239
 565:Core/Src/main.c ****   {
 566:Core/Src/main.c ****   }
 1122              		.loc 1 566 3 discriminator 1 view .LVU240
 564:Core/Src/main.c ****   while (1)
 1123              		.loc 1 564 9 discriminator 1 view .LVU241
 1124 0002 FEE7     		b	.L75
 1125              		.cfi_endproc
 1126              	.LFE88:
 1128              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1129              		.align	1
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1133              		.fpu softvfp
 1135              	MX_USART1_UART_Init:
 1136              	.LFB77:
 232:Core/Src/main.c **** 
 1137              		.loc 1 232 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141 0000 08B5     		push	{r3, lr}
 1142              	.LCFI19:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 3, -8
 1145              		.cfi_offset 14, -4
 241:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1146              		.loc 1 241 3 view .LVU243
 241:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1147              		.loc 1 241 19 is_stmt 0 view .LVU244
 1148 0002 0A48     		ldr	r0, .L80
 1149 0004 0A4B     		ldr	r3, .L80+4
 1150 0006 0360     		str	r3, [r0]
 242:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1151              		.loc 1 242 3 is_stmt 1 view .LVU245
 242:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1152              		.loc 1 242 24 is_stmt 0 view .LVU246
 1153 0008 4FF4E133 		mov	r3, #115200
 1154 000c 4360     		str	r3, [r0, #4]
 243:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1155              		.loc 1 243 3 is_stmt 1 view .LVU247
 243:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1156              		.loc 1 243 26 is_stmt 0 view .LVU248
 1157 000e 0023     		movs	r3, #0
 1158 0010 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 36


 244:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1159              		.loc 1 244 3 is_stmt 1 view .LVU249
 244:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1160              		.loc 1 244 24 is_stmt 0 view .LVU250
 1161 0012 C360     		str	r3, [r0, #12]
 245:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1162              		.loc 1 245 3 is_stmt 1 view .LVU251
 245:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1163              		.loc 1 245 22 is_stmt 0 view .LVU252
 1164 0014 0361     		str	r3, [r0, #16]
 246:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1165              		.loc 1 246 3 is_stmt 1 view .LVU253
 246:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1166              		.loc 1 246 20 is_stmt 0 view .LVU254
 1167 0016 0C22     		movs	r2, #12
 1168 0018 4261     		str	r2, [r0, #20]
 247:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1169              		.loc 1 247 3 is_stmt 1 view .LVU255
 247:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1170              		.loc 1 247 25 is_stmt 0 view .LVU256
 1171 001a 8361     		str	r3, [r0, #24]
 248:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1172              		.loc 1 248 3 is_stmt 1 view .LVU257
 248:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1173              		.loc 1 248 28 is_stmt 0 view .LVU258
 1174 001c C361     		str	r3, [r0, #28]
 249:Core/Src/main.c ****   {
 1175              		.loc 1 249 3 is_stmt 1 view .LVU259
 249:Core/Src/main.c ****   {
 1176              		.loc 1 249 7 is_stmt 0 view .LVU260
 1177 001e FFF7FEFF 		bl	HAL_UART_Init
 1178              	.LVL84:
 249:Core/Src/main.c ****   {
 1179              		.loc 1 249 6 view .LVU261
 1180 0022 00B9     		cbnz	r0, .L79
 257:Core/Src/main.c **** 
 1181              		.loc 1 257 1 view .LVU262
 1182 0024 08BD     		pop	{r3, pc}
 1183              	.L79:
 251:Core/Src/main.c ****   }
 1184              		.loc 1 251 5 is_stmt 1 view .LVU263
 1185 0026 FFF7FEFF 		bl	Error_Handler
 1186              	.LVL85:
 1187              	.L81:
 1188 002a 00BF     		.align	2
 1189              	.L80:
 1190 002c 00000000 		.word	.LANCHOR0
 1191 0030 00380140 		.word	1073821696
 1192              		.cfi_endproc
 1193              	.LFE77:
 1195              		.section	.text.SystemClock_Config,"ax",%progbits
 1196              		.align	1
 1197              		.global	SystemClock_Config
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu softvfp
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 37


 1203              	SystemClock_Config:
 1204              	.LFB76:
 194:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1205              		.loc 1 194 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 64
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209 0000 00B5     		push	{lr}
 1210              	.LCFI20:
 1211              		.cfi_def_cfa_offset 4
 1212              		.cfi_offset 14, -4
 1213 0002 91B0     		sub	sp, sp, #68
 1214              	.LCFI21:
 1215              		.cfi_def_cfa_offset 72
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1216              		.loc 1 195 3 view .LVU265
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1217              		.loc 1 195 22 is_stmt 0 view .LVU266
 1218 0004 2822     		movs	r2, #40
 1219 0006 0021     		movs	r1, #0
 1220 0008 06A8     		add	r0, sp, #24
 1221 000a FFF7FEFF 		bl	memset
 1222              	.LVL86:
 196:Core/Src/main.c **** 
 1223              		.loc 1 196 3 is_stmt 1 view .LVU267
 196:Core/Src/main.c **** 
 1224              		.loc 1 196 22 is_stmt 0 view .LVU268
 1225 000e 0023     		movs	r3, #0
 1226 0010 0193     		str	r3, [sp, #4]
 1227 0012 0293     		str	r3, [sp, #8]
 1228 0014 0393     		str	r3, [sp, #12]
 1229 0016 0493     		str	r3, [sp, #16]
 1230 0018 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1231              		.loc 1 201 3 is_stmt 1 view .LVU269
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1232              		.loc 1 201 36 is_stmt 0 view .LVU270
 1233 001a 0223     		movs	r3, #2
 1234 001c 0693     		str	r3, [sp, #24]
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1235              		.loc 1 202 3 is_stmt 1 view .LVU271
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1236              		.loc 1 202 30 is_stmt 0 view .LVU272
 1237 001e 0122     		movs	r2, #1
 1238 0020 0A92     		str	r2, [sp, #40]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1239              		.loc 1 203 3 is_stmt 1 view .LVU273
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1240              		.loc 1 203 41 is_stmt 0 view .LVU274
 1241 0022 1022     		movs	r2, #16
 1242 0024 0B92     		str	r2, [sp, #44]
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1243              		.loc 1 204 3 is_stmt 1 view .LVU275
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1244              		.loc 1 204 34 is_stmt 0 view .LVU276
 1245 0026 0D93     		str	r3, [sp, #52]
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 38


 1246              		.loc 1 205 3 is_stmt 1 view .LVU277
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1247              		.loc 1 206 3 view .LVU278
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1248              		.loc 1 206 32 is_stmt 0 view .LVU279
 1249 0028 4FF4E013 		mov	r3, #1835008
 1250 002c 0F93     		str	r3, [sp, #60]
 207:Core/Src/main.c ****   {
 1251              		.loc 1 207 3 is_stmt 1 view .LVU280
 207:Core/Src/main.c ****   {
 1252              		.loc 1 207 7 is_stmt 0 view .LVU281
 1253 002e 06A8     		add	r0, sp, #24
 1254 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1255              	.LVL87:
 207:Core/Src/main.c ****   {
 1256              		.loc 1 207 6 view .LVU282
 1257 0034 88B9     		cbnz	r0, .L86
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1258              		.loc 1 213 3 is_stmt 1 view .LVU283
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1259              		.loc 1 213 31 is_stmt 0 view .LVU284
 1260 0036 0F23     		movs	r3, #15
 1261 0038 0193     		str	r3, [sp, #4]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1262              		.loc 1 215 3 is_stmt 1 view .LVU285
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1263              		.loc 1 215 34 is_stmt 0 view .LVU286
 1264 003a 0223     		movs	r3, #2
 1265 003c 0293     		str	r3, [sp, #8]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1266              		.loc 1 216 3 is_stmt 1 view .LVU287
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1267              		.loc 1 216 35 is_stmt 0 view .LVU288
 1268 003e 0023     		movs	r3, #0
 1269 0040 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1270              		.loc 1 217 3 is_stmt 1 view .LVU289
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1271              		.loc 1 217 36 is_stmt 0 view .LVU290
 1272 0042 4FF48062 		mov	r2, #1024
 1273 0046 0492     		str	r2, [sp, #16]
 218:Core/Src/main.c **** 
 1274              		.loc 1 218 3 is_stmt 1 view .LVU291
 218:Core/Src/main.c **** 
 1275              		.loc 1 218 36 is_stmt 0 view .LVU292
 1276 0048 0593     		str	r3, [sp, #20]
 220:Core/Src/main.c ****   {
 1277              		.loc 1 220 3 is_stmt 1 view .LVU293
 220:Core/Src/main.c ****   {
 1278              		.loc 1 220 7 is_stmt 0 view .LVU294
 1279 004a 0121     		movs	r1, #1
 1280 004c 01A8     		add	r0, sp, #4
 1281 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1282              	.LVL88:
 220:Core/Src/main.c ****   {
 1283              		.loc 1 220 6 view .LVU295
 1284 0052 20B9     		cbnz	r0, .L87
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 39


 224:Core/Src/main.c **** 
 1285              		.loc 1 224 1 view .LVU296
 1286 0054 11B0     		add	sp, sp, #68
 1287              	.LCFI22:
 1288              		.cfi_remember_state
 1289              		.cfi_def_cfa_offset 4
 1290              		@ sp needed
 1291 0056 5DF804FB 		ldr	pc, [sp], #4
 1292              	.L86:
 1293              	.LCFI23:
 1294              		.cfi_restore_state
 209:Core/Src/main.c ****   }
 1295              		.loc 1 209 5 is_stmt 1 view .LVU297
 1296 005a FFF7FEFF 		bl	Error_Handler
 1297              	.LVL89:
 1298              	.L87:
 222:Core/Src/main.c ****   }
 1299              		.loc 1 222 5 view .LVU298
 1300 005e FFF7FEFF 		bl	Error_Handler
 1301              	.LVL90:
 1302              		.cfi_endproc
 1303              	.LFE76:
 1305              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1306              		.align	2
 1307              	.LC11:
 1308 0000 446F6F72 		.ascii	"Door is now opened by default.\015\012\000"
 1308      20697320 
 1308      6E6F7720 
 1308      6F70656E 
 1308      65642062 
 1309 0021 000000   		.align	2
 1310              	.LC10:
 1311 0024 446F6F72 		.ascii	"Door was opened by a key. Key ID: \000"
 1311      20776173 
 1311      206F7065 
 1311      6E656420 
 1311      62792061 
 1312              		.section	.text.main,"ax",%progbits
 1313              		.align	1
 1314              		.global	main
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	main:
 1321              	.LFB75:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1322              		.loc 1 98 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 56
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326 0000 70B5     		push	{r4, r5, r6, lr}
 1327              	.LCFI24:
 1328              		.cfi_def_cfa_offset 16
 1329              		.cfi_offset 4, -16
 1330              		.cfi_offset 5, -12
 1331              		.cfi_offset 6, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 40


 1332              		.cfi_offset 14, -4
 1333 0002 8EB0     		sub	sp, sp, #56
 1334              	.LCFI25:
 1335              		.cfi_def_cfa_offset 72
 106:Core/Src/main.c **** 
 1336              		.loc 1 106 3 view .LVU300
 1337 0004 FFF7FEFF 		bl	HAL_Init
 1338              	.LVL91:
 113:Core/Src/main.c **** 
 1339              		.loc 1 113 3 view .LVU301
 1340 0008 FFF7FEFF 		bl	SystemClock_Config
 1341              	.LVL92:
 120:Core/Src/main.c ****   MX_USART1_UART_Init();
 1342              		.loc 1 120 3 view .LVU302
 1343 000c FFF7FEFF 		bl	MX_GPIO_Init
 1344              	.LVL93:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1345              		.loc 1 121 3 view .LVU303
 1346 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1347              	.LVL94:
 124:Core/Src/main.c **** 
 1348              		.loc 1 124 3 view .LVU304
 124:Core/Src/main.c **** 
 1349              		.loc 1 124 12 is_stmt 0 view .LVU305
 1350 0014 0025     		movs	r5, #0
 1351 0016 0FE0     		b	.L89
 1352              	.LVL95:
 1353              	.L100:
 134:Core/Src/main.c ****       timme = HAL_GetTick();
 1354              		.loc 1 134 7 is_stmt 1 view .LVU306
 1355 0018 FFF7FEFF 		bl	switchMode
 1356              	.LVL96:
 135:Core/Src/main.c ****     }
 1357              		.loc 1 135 7 view .LVU307
 135:Core/Src/main.c ****     }
 1358              		.loc 1 135 15 is_stmt 0 view .LVU308
 1359 001c FFF7FEFF 		bl	HAL_GetTick
 1360              	.LVL97:
 1361 0020 0546     		mov	r5, r0
 1362              	.LVL98:
 135:Core/Src/main.c ****     }
 1363              		.loc 1 135 15 view .LVU309
 1364 0022 10E0     		b	.L90
 1365              	.LVL99:
 1366              	.L93:
 1367              	.LBB14:
 159:Core/Src/main.c ****         }
 1368              		.loc 1 159 11 is_stmt 1 view .LVU310
 1369 0024 3C48     		ldr	r0, .L101
 1370 0026 FFF7FEFF 		bl	UART_Printf
 1371              	.LVL100:
 1372 002a 05E0     		b	.L89
 1373              	.LVL101:
 1374              	.L92:
 159:Core/Src/main.c ****         }
 1375              		.loc 1 159 11 is_stmt 0 view .LVU311
 1376              	.LBE14:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 41


 162:Core/Src/main.c ****       {
 1377              		.loc 1 162 12 is_stmt 1 view .LVU312
 162:Core/Src/main.c ****       {
 1378              		.loc 1 162 14 is_stmt 0 view .LVU313
 1379 002c 012B     		cmp	r3, #1
 1380 002e 43D0     		beq	.L97
 167:Core/Src/main.c ****       {
 1381              		.loc 1 167 12 is_stmt 1 view .LVU314
 167:Core/Src/main.c ****       {
 1382              		.loc 1 167 14 is_stmt 0 view .LVU315
 1383 0030 022B     		cmp	r3, #2
 1384 0032 48D0     		beq	.L98
 173:Core/Src/main.c ****       {
 1385              		.loc 1 173 12 is_stmt 1 view .LVU316
 173:Core/Src/main.c ****       {
 1386              		.loc 1 173 14 is_stmt 0 view .LVU317
 1387 0034 032B     		cmp	r3, #3
 1388 0036 57D0     		beq	.L99
 1389              	.LVL102:
 1390              	.L89:
 130:Core/Src/main.c ****   {
 1391              		.loc 1 130 3 is_stmt 1 view .LVU318
 133:Core/Src/main.c ****       switchMode();
 1392              		.loc 1 133 5 view .LVU319
 133:Core/Src/main.c ****       switchMode();
 1393              		.loc 1 133 10 is_stmt 0 view .LVU320
 1394 0038 FFF7FEFF 		bl	HAL_GetTick
 1395              	.LVL103:
 133:Core/Src/main.c ****       switchMode();
 1396              		.loc 1 133 24 view .LVU321
 1397 003c 431B     		subs	r3, r0, r5
 133:Core/Src/main.c ****       switchMode();
 1398              		.loc 1 133 7 view .LVU322
 1399 003e 43F69822 		movw	r2, #15000
 1400 0042 9342     		cmp	r3, r2
 1401 0044 E8D8     		bhi	.L100
 1402              	.L90:
 138:Core/Src/main.c ****     {
 1403              		.loc 1 138 5 is_stmt 1 view .LVU323
 138:Core/Src/main.c ****     {
 1404              		.loc 1 138 8 is_stmt 0 view .LVU324
 1405 0046 FFF7FEFF 		bl	wig_available
 1406              	.LVL104:
 138:Core/Src/main.c ****     {
 1407              		.loc 1 138 7 view .LVU325
 1408 004a 0028     		cmp	r0, #0
 1409 004c F4D0     		beq	.L89
 140:Core/Src/main.c ****       {
 1410              		.loc 1 140 7 is_stmt 1 view .LVU326
 140:Core/Src/main.c ****       {
 1411              		.loc 1 140 19 is_stmt 0 view .LVU327
 1412 004e 334B     		ldr	r3, .L101+4
 1413 0050 1B68     		ldr	r3, [r3]
 140:Core/Src/main.c ****       {
 1414              		.loc 1 140 9 view .LVU328
 1415 0052 002B     		cmp	r3, #0
 1416 0054 EAD1     		bne	.L92
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 42


 1417              	.LBB16:
 142:Core/Src/main.c ****         uint32_t wcode = getCode();
 1418              		.loc 1 142 9 is_stmt 1 view .LVU329
 142:Core/Src/main.c ****         uint32_t wcode = getCode();
 1419              		.loc 1 142 23 is_stmt 0 view .LVU330
 1420 0056 324C     		ldr	r4, .L101+8
 1421 0058 2370     		strb	r3, [r4]
 143:Core/Src/main.c ****         wig_flag_inrt = 1;
 1422              		.loc 1 143 9 is_stmt 1 view .LVU331
 143:Core/Src/main.c ****         wig_flag_inrt = 1;
 1423              		.loc 1 143 26 is_stmt 0 view .LVU332
 1424 005a FFF7FEFF 		bl	getCode
 1425              	.LVL105:
 1426 005e 0646     		mov	r6, r0
 1427              	.LVL106:
 144:Core/Src/main.c **** 
 1428              		.loc 1 144 9 is_stmt 1 view .LVU333
 144:Core/Src/main.c **** 
 1429              		.loc 1 144 23 is_stmt 0 view .LVU334
 1430 0060 0123     		movs	r3, #1
 1431 0062 2370     		strb	r3, [r4]
 146:Core/Src/main.c ****           char s[] = "Door was opened by a key. Key ID: ";
 1432              		.loc 1 146 9 is_stmt 1 view .LVU335
 146:Core/Src/main.c ****           char s[] = "Door was opened by a key. Key ID: ";
 1433              		.loc 1 146 12 is_stmt 0 view .LVU336
 1434 0064 FFF7FEFF 		bl	verifyCode
 1435              	.LVL107:
 146:Core/Src/main.c ****           char s[] = "Door was opened by a key. Key ID: ";
 1436              		.loc 1 146 11 view .LVU337
 1437 0068 0028     		cmp	r0, #0
 1438 006a DBD0     		beq	.L93
 1439              	.LBB15:
 147:Core/Src/main.c ****           char code[16];
 1440              		.loc 1 147 11 is_stmt 1 view .LVU338
 147:Core/Src/main.c ****           char code[16];
 1441              		.loc 1 147 16 is_stmt 0 view .LVU339
 1442 006c 0DF1140C 		add	ip, sp, #20
 1443 0070 2C4C     		ldr	r4, .L101+12
 1444 0072 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1445 0074 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1446 0078 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1447 007a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1448 007e 2368     		ldr	r3, [r4]
 1449 0080 2CF8023B 		strh	r3, [ip], #2	@ movhi
 1450 0084 1B0C     		lsrs	r3, r3, #16
 1451 0086 8CF80030 		strb	r3, [ip]
 148:Core/Src/main.c ****           sprintf(code,"%lu", wcode);
 1452              		.loc 1 148 11 is_stmt 1 view .LVU340
 149:Core/Src/main.c **** 
 1453              		.loc 1 149 11 view .LVU341
 1454 008a 3246     		mov	r2, r6
 1455 008c 2649     		ldr	r1, .L101+16
 1456 008e 01A8     		add	r0, sp, #4
 1457 0090 FFF7FEFF 		bl	sprintf
 1458              	.LVL108:
 151:Core/Src/main.c ****           strcat(s, ".\r\n");
 1459              		.loc 1 151 11 view .LVU342
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 43


 1460 0094 05AC     		add	r4, sp, #20
 1461 0096 01A9     		add	r1, sp, #4
 1462 0098 2046     		mov	r0, r4
 1463 009a FFF7FEFF 		bl	strcat
 1464              	.LVL109:
 152:Core/Src/main.c ****           UART_Printf(s);
 1465              		.loc 1 152 11 view .LVU343
 1466 009e 2046     		mov	r0, r4
 1467 00a0 FFF7FEFF 		bl	strlen
 1468              	.LVL110:
 1469 00a4 0346     		mov	r3, r0
 1470 00a6 214A     		ldr	r2, .L101+20
 1471 00a8 1068     		ldr	r0, [r2]
 1472 00aa E050     		str	r0, [r4, r3]	@ unaligned
 153:Core/Src/main.c **** 
 1473              		.loc 1 153 11 view .LVU344
 1474 00ac 2046     		mov	r0, r4
 1475 00ae FFF7FEFF 		bl	UART_Printf
 1476              	.LVL111:
 155:Core/Src/main.c ****         }
 1477              		.loc 1 155 11 view .LVU345
 1478 00b2 FFF7FEFF 		bl	openDoor
 1479              	.LVL112:
 1480              	.LBE15:
 1481 00b6 BFE7     		b	.L89
 1482              	.LVL113:
 1483              	.L97:
 155:Core/Src/main.c ****         }
 1484              		.loc 1 155 11 is_stmt 0 view .LVU346
 1485              	.LBE16:
 164:Core/Src/main.c ****         blink(2);
 1486              		.loc 1 164 9 is_stmt 1 view .LVU347
 1487 00b8 1D48     		ldr	r0, .L101+24
 1488 00ba FFF7FEFF 		bl	UART_Printf
 1489              	.LVL114:
 165:Core/Src/main.c ****       }
 1490              		.loc 1 165 9 view .LVU348
 1491 00be 0220     		movs	r0, #2
 1492 00c0 FFF7FEFF 		bl	blink
 1493              	.LVL115:
 1494 00c4 B8E7     		b	.L89
 1495              	.L98:
 169:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 1496              		.loc 1 169 9 view .LVU349
 1497 00c6 1B48     		ldr	r0, .L101+28
 1498 00c8 FFF7FEFF 		bl	UART_Printf
 1499              	.LVL116:
 170:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 1500              		.loc 1 170 9 view .LVU350
 1501 00cc 1A4C     		ldr	r4, .L101+32
 1502 00ce 0022     		movs	r2, #0
 1503 00d0 4FF48041 		mov	r1, #16384
 1504 00d4 2046     		mov	r0, r4
 1505 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1506              	.LVL117:
 171:Core/Src/main.c ****       }
 1507              		.loc 1 171 9 view .LVU351
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 44


 1508 00da 0022     		movs	r2, #0
 1509 00dc 4FF40041 		mov	r1, #32768
 1510 00e0 2046     		mov	r0, r4
 1511 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1512              	.LVL118:
 1513 00e6 A7E7     		b	.L89
 1514              	.L99:
 175:Core/Src/main.c ****         blink(1);
 1515              		.loc 1 175 9 view .LVU352
 1516 00e8 1448     		ldr	r0, .L101+36
 1517 00ea FFF7FEFF 		bl	UART_Printf
 1518              	.LVL119:
 176:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_1_Pin, RESET);
 1519              		.loc 1 176 9 view .LVU353
 1520 00ee 0120     		movs	r0, #1
 1521 00f0 FFF7FEFF 		bl	blink
 1522              	.LVL120:
 177:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GreenLed_2_Pin, RESET);
 1523              		.loc 1 177 9 view .LVU354
 1524 00f4 104C     		ldr	r4, .L101+32
 1525 00f6 0022     		movs	r2, #0
 1526 00f8 4FF48041 		mov	r1, #16384
 1527 00fc 2046     		mov	r0, r4
 1528 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 1529              	.LVL121:
 178:Core/Src/main.c ****         workMode = 2;
 1530              		.loc 1 178 9 view .LVU355
 1531 0102 0022     		movs	r2, #0
 1532 0104 4FF40041 		mov	r1, #32768
 1533 0108 2046     		mov	r0, r4
 1534 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1535              	.LVL122:
 179:Core/Src/main.c ****       }
 1536              		.loc 1 179 9 view .LVU356
 179:Core/Src/main.c ****       }
 1537              		.loc 1 179 18 is_stmt 0 view .LVU357
 1538 010e 034B     		ldr	r3, .L101+4
 1539 0110 0222     		movs	r2, #2
 1540 0112 1A60     		str	r2, [r3]
 1541 0114 90E7     		b	.L89
 1542              	.L102:
 1543 0116 00BF     		.align	2
 1544              	.L101:
 1545 0118 10000000 		.word	.LC7
 1546 011c 00000000 		.word	.LANCHOR1
 1547 0120 00000000 		.word	.LANCHOR2
 1548 0124 24000000 		.word	.LC10
 1549 0128 08000000 		.word	.LC5
 1550 012c 0C000000 		.word	.LC6
 1551 0130 00000000 		.word	.LC0
 1552 0134 14000000 		.word	.LC1
 1553 0138 000C0140 		.word	1073810432
 1554 013c 00000000 		.word	.LC11
 1555              		.cfi_endproc
 1556              	.LFE75:
 1558              		.global	isDoorOpened
 1559              		.global	workMode
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 45


 1560              		.global	wig_flag_inrt
 1561              		.global	huart1
 1562              		.section	.bss.huart1,"aw",%nobits
 1563              		.align	2
 1564              		.set	.LANCHOR0,. + 0
 1567              	huart1:
 1568 0000 00000000 		.space	64
 1568      00000000 
 1568      00000000 
 1568      00000000 
 1568      00000000 
 1569              		.section	.bss.isDoorOpened,"aw",%nobits
 1570              		.set	.LANCHOR3,. + 0
 1573              	isDoorOpened:
 1574 0000 00       		.space	1
 1575              		.section	.bss.workMode,"aw",%nobits
 1576              		.align	2
 1577              		.set	.LANCHOR1,. + 0
 1580              	workMode:
 1581 0000 00000000 		.space	4
 1582              		.section	.data.wig_flag_inrt,"aw"
 1583              		.set	.LANCHOR2,. + 0
 1586              	wig_flag_inrt:
 1587 0000 01       		.byte	1
 1588              		.text
 1589              	.Letext0:
 1590              		.file 3 "e:\\dev\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\_def
 1591              		.file 4 "e:\\dev\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_stdint.
 1592              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xg.h"
 1593              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1594              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1595              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1596              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1597              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1598              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1599              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1600              		.file 13 "e:\\dev\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-eabi\\10.2.1\\inc
 1601              		.file 14 "e:\\dev\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\stdio.h"
 1602              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1603              		.file 16 "e:\\dev\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\string.h"
 1604              		.file 17 "Core/Inc/wiegand.h"
 1605              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1606              		.file 19 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:212    .text.MX_GPIO_Init:000000e8 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:221    .text.verifyCode:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:228    .text.verifyCode:00000000 verifyCode
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:278    .text.verifyCode:00000018 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:283    .text.UART_Printf:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:290    .text.UART_Printf:00000000 UART_Printf
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:356    .text.UART_Printf:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:361    .text.blink:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:368    .text.blink:00000000 blink
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:444    .text.blink:00000054 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:449    .rodata.verifyMode.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:456    .text.verifyMode:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:463    .text.verifyMode:00000000 verifyMode
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:481    .text.verifyMode:0000000e $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:485    .text.verifyMode:00000012 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:537    .text.verifyMode:00000044 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:544    .rodata.switchedModes.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:548    .text.switchedModes:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:555    .text.switchedModes:00000000 switchedModes
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:612    .text.switchedModes:00000044 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:619    .text.switchMode:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:626    .text.switchMode:00000000 switchMode
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:671    .text.switchMode:00000024 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:676    .rodata.read.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:692    .text.read:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:699    .text.read:00000000 read
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:823    .text.read:00000090 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:834    .rodata.openDoor.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:838    .text.openDoor:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:845    .text.openDoor:00000000 openDoor
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:929    .text.openDoor:00000060 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:936    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:940    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:947    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1081   .text.HAL_GPIO_EXTI_Callback:00000080 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1090   .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1097   .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1129   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1135   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1190   .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1196   .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1203   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1306   .rodata.main.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1313   .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1320   .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1545   .text.main:00000118 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1573   .bss.isDoorOpened:00000000 isDoorOpened
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1580   .bss.workMode:00000000 workMode
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1586   .data.wig_flag_inrt:00000000 wig_flag_inrt
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1567   .bss.huart1:00000000 huart1
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1563   .bss.huart1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1574   .bss.isDoorOpened:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s:1576   .bss.workMode:00000000 $d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdYIRgo.s 			page 47



UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
vsnprintf
strlen
HAL_UART_Transmit
HAL_Delay
wig_available
getCode
sprintf
strcat
HAL_GetTick
ReadD0
ReadD1
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
